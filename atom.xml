<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Tikitoo Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://tikitoo.me//"/>
  <updated>2016-01-30T04:25:47.213Z</updated>
  <id>http://tikitoo.me//</id>
  
  <author>
    <name><![CDATA[Tikitoo]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Android 开发有哪些新技术出现？]]></title>
    <link href="http://tikitoo.me/2016/01/29/What-new-technologies-have-android/"/>
    <id>http://tikitoo.me/2016/01/29/What-new-technologies-have-android/</id>
    <published>2016-01-29T14:45:25.000Z</published>
    <updated>2016-01-30T04:25:47.213Z</updated>
    <content type="html"><![CDATA[<p>作为一个程序员，应该养成持续学习的能力，随时关注新技术，有时候做起事来会让你事半功倍的效果。之前在知乎上看到下面这个问题，觉得很受用，所有就总结了大牛们的回答，也跟着大牛们的脚步，看看有哪些新技术，也跟着学习学习，涨涨见识。</p>
<blockquote>
<p>本文参考<a href="weibo.com/devandroid">@Android 笔记</a> 在知乎的回答：<br>Android 开发有哪些新技术出现？<br><a href="https://www.zhihu.com/question/32037895" target="_blank" rel="external">https://www.zhihu.com/question/32037895</a></p>
</blockquote>
<h2 id="Android_Studio">Android Studio</h2><p>Android Studio 是Google 官方推出的全新的Android 开发的IDE，自2013 年发布，目前最新稳定版是1.5。<br>目前Google 官方放弃 Eclipse 的支持，加上Android Studio 普及。AS 虽然不算新，但是对 Android Studio 这个软件的更新速度快的惊人，有大量的新功能发布。<br>例如支持很多注解代码提示注解、Live Code Template、支持自动生成 Parcelable 实现等等，作为开发者，持续关注这个更新列表：<a href="tools.android.com/recent">tools.android.com/recent</a>，一定会让你的写代码的生活更加美好。<br>而且Android 1.0 之后大量的新特性，让我们的开发更便捷，比如Vector Asset，Theme Editor，Gradle 编译速度大幅提升，Android Studio 2.0 的Install Run 实现的实时运行功能。</p>
<h2 id="Material_Design_设计">Material Design 设计</h2><p>Android 4.0 的Android Design 留下了诟病，也让Google 下定了决心，在5.0 推出了Material Design 全平台设计语言。它对于每一个点击，每一次滑动都有设计规范。对于设计师和程序员都是值得一看的。</p>
<blockquote>
<p>Material Design 设计规范：<a href="https://design.google.com/" target="_blank" rel="external">https://design.google.com/</a></p>
</blockquote>
<h2 id="Design_设计支持库">Design 设计支持库</h2><p>如果说Material Design 是设计师看的（其实程序员也应该看）。那么的Design 设计支持库，也使得Material Design 设计在Android 中也慢慢实现了。也让没有设计感的程序员也可以制作出惊艳的App。比如Navigation View（侧滑栏），Floating Action Button（悬浮按钮），Snackbar，TabLayout，CoordinatorLayout，App Bar，nestedscrollview。</p>
<blockquote>
<p><a href="http://android-developers.blogspot.com/2015/05/android-design-support-library.html" target="_blank" rel="external">http://android-developers.blogspot.com/2015/05/android-design-support-library.html</a></p>
</blockquote>
<h2 id="Sketch_3"><strong>Sketch 3</strong></h2><p>这是一个专为设计移动端 UI 的设计工具，作为开发者，不用懂那么复杂的 PS 使用，也可以做非常专业设计：<a href="https://designcode.io/sketch" target="_blank" rel="external">https://designcode.io/sketch</a></p>
<h2 id="RecyclerView">RecyclerView</h2><p>RecyclerView的几大特性：</p>
<p><strong>ViewHolder 模式</strong>：在ListView 中需要手动添加ViewHolder 模式，而且不会重用之前的View，RecyclerView默认实现了重用，让绘制View 更加高效。</p>
<p><strong>LayoutManager </strong>：设置布局，就可以实现单列表，GridView，瀑布流的效果。</p>
<p><strong>Item Decoration</strong>：自定义各种分割线</p>
<p><strong>Item Animator</strong>：设置各种炫酷增删动画</p>
<p> RecyclerView 对于不同类型可以很容易添加。现在很多App 的首页很复杂的内容，样式不一样，使用RecyclerView 很容易解决，还有底部加载更多也很容易实现。</p>
<h2 id="Kotlin">Kotlin</h2><p>作为 Android 领域的 Swift，绝对让你如沐新风。抛弃沉重的 Java 语法，Kotlin 融入了很多现代编程语言的思想，作为开发者，接受新的语言，了解新语言的发展趋势，更有利于开阔你的思路和加深对语言的理解。在 Android 开发上，使用 Kotlin 并不会让你付出什么代价，为什么不来试试？</p>
<h2 id="Fresco"><strong><a href="https://github.com/facebook/fresco" target="_blank" rel="external">Fresco</a></strong></h2><p>Fresco是Facebook最新推出的一款用于Android应用中展示图片的强大图片库，可以从网络、本地存储和本地资源中加载图片。其中的Drawees可以显示占位符，直到图片加载完成。而当图片从屏幕上消失时，会自动释放内存。</p>
<h2 id="React_Native">React Native</h2><p>React Native 结合了 Web 应用和 Native 应用的优势，可以使用 JavaScript 来开发 iOS 和 Android 原生应用。在 JavaScript 中用 React 抽象操作系统原生的 UI 组件，代替 DOM 元素来渲染等。</p>
<p>跨平台一直是程序员的梦想，而且移动应用的跨平台解决方案也很多，因为 Facebook 的参与和力推，让这个解决方案带上了光环。第一个用 React Native 开发的 App 已经在 Google Play 上架 <a href="//link.zhihu.com/?target=https%3A//play.google.com/store/apps/details%3Fid%3Dcom.facebook.adsmanager">Facebook 广告管理工具</a>，目前iOS 和Android 版本都已发布，最新版为0.5。</p>
<h2 id="Dagger_2">Dagger 2</h2><p>Dagger 2 是Google 主导开发的依赖注入框架，它是基于Dagger 1（由Square 主导开发），利用生成和写的代码混合达到看似所有的产生和提供依赖的代码都是手写的样子，极大减少了使用者的编码负担，也更便于调试，Google 声称提高了13 % 的性能，。</p>
<h2 id="MVP">MVP</h2><p>我们都知道MVC 模式，MVP 就是基于MVC 的模式上的一个演化版本。在MVC模式中，Activity应该是属于View这一层。而实质上，它既承担了View，同时也包含一些Controller的东西在里面。随着项目的迭代更新，这对开发很不友好，耦合度也原来越高，项目越来越难维护，而MVP 就是解决这样的痛点。把Activity的View和Controller抽离出来就变成了View和Presenter。</p>
<h2 id="DataBinding_MVVM">DataBinding <strong>MVVM</strong></h2><p>DataBinding 即数据绑定，在前端的框架有很广泛的使用，比如像AngularJS，就支持双向绑定。<br>所谓MVVM，像Activity，Fragment，View 都属于View 这一层；Model层主要负责数据相关部分，可以从数据库或者网络获取；ViewModel主要是把Model转换为View 可以呈现的东西，例如把一个Date 类型转化为格式化后的String，也就是将前面两者联系在一起的对象，<br>在Data Binding 支持下，会根据layout 文件名自动生成一个相对应的Binding（比如activity_main，对应生成MainActivityDataBinding 对象），数据绑定在Layout文件中XML标注。<br>在Google I/O 2015上，伴随着Android M预览版发布的Data Binding 兼容函数库改变了这一切。而在Android Studio 2.5 的预览版，Data Binding 在XML 中也终于有了代码提示功能。</p>
<h2 id="RxJava/RxAndroid">RxJava/RxAndroid</h2><p>RxJava一个在 Java VM 上使用可观测的序列来组成异步的、基于事件的程序的库。用简单的一个词来介绍就是“异步”。<br>它提供了基于Observable（观察者） 序列实现的异步调用及基于事件编程。<br>它扩展了观察者模式，支持数据、事件序列并允许你合并序列，无需关心底层的线程处理、同步、线程安全、并发数据结构和非阻塞I/O处理。<br>它支持Java5 及更高版本，并支持其他一些基于JVM的语言，如Groovy、Clojure和Scala。而且他能和Retrofit 更好的结合使用，也有相对应的RxBus 等框架结合。</p>
<h2 id="Espresso_2-0">Espresso 2.0</h2><p>近些年，随着Android社区的成熟，出现了诸如Robotium，Robolectric等的优秀测试框架。而Google也在近期推出了自己的UI测试框架Espresso。<br>Espresso 是一个提供了简单 API 的用于 Android App UI 测试的测试框架。最新的 2.0 版本发布后已经可以在 Android Support Repository 中下载了，那么在项目中集成它就方便多了。它的API 很小，对外扩张开放，测试跑起来那是相当的快，对Gradle 和Android Studio 支持。</p>
<h2 id="Baas">Baas</h2><p>Baas 又称mBaas，全称叫Backend as a Service（后端作为一种服务）， 怎么说呢，为移动应用开发者提供后端服务；作为一个移动应用开发者（Android &amp; iPhone），除了开发应用程序，还要做后台的服务器端，当然，大多移动应用开发者并非都懂后端开发， 这让一个应用应用开发者开发一款应用不容易，然而有了Baas，开发者就可以不用管后端开发了，Baas 提供商，提供了我们最常用的功能，比如数据存储，应用分析，IM 等功能，让开发者把主要精力放在应用本身，大大提高了效率。<br>当然也不一定是移动应用开发者，当然也可以Web 开发，当初Baas 主要是为了解决移动应用开发者的后端服务问题，Baas 也提供其他的服务；国外类似Parse，Firebase，国内像LeanCloud 都是提供这样的服务。</p>
<h2 id="App_Indexing">App Indexing</h2><p>我们都知道网页是一个一个超链接相连的，然而在移动互联网时代，每个App 里的数据就想信息孤岛，App Indexing 就是要打破这样的尴尬，只要你在App 实现App Indexing 功能，你的App 里的数据，就会出现在Google 的搜索结果中，尤其是出海的App，这个功能尤其重要，据说Google 打算实现在网页中直接安装App。</p>
<hr>
<h2 id="参考">参考</h2><ul>
<li><a href="https://www.zhihu.com/question/32037895" target="_blank" rel="external">Android 开发有哪些新技术出现？</a></li>
<li><a href="http://stackoverflow.com/questions/26570325/what-are-recycler-view-advantages-compared-to-listview" target="_blank" rel="external">android - what are recycler view advantages compared to listview - Stack Overflow</a></li>
<li><a href="http://jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0601/2962.html" target="_blank" rel="external">关于Android的Data Binding技术 - 泡在网上的日子</a></li>
<li><a href="http://www.importnew.com/8321.html" target="_blank" rel="external">在安卓上使用RxJava - ImportNew</a></li>
<li><a href="https://github.com/bboyfeiyu/android-tech-frontier/blob/master/issue-11/Android-Espresso%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D.md" target="_blank" rel="external">Android-Espresso测试框架介绍 - bboyfeiyu/android-tech-frontier</a></li>
</ul>
<h2 id=""><br></h2><p><img src="http://ww2.sinaimg.cn/large/68622377gw1f00ivyo4lsj20760760t7.jpg" alt="安卓同学的公众号，更多分享..."></p>
<center>Tikitoo 的公众号，更多分享…</center>
]]></content>
    <summary type="html">
    <![CDATA[<p>作为一个程序员，应该养成持续学习的能力，随时关注新技术，有时候做起事来会让你事半功倍的效果。之前在知乎上看到下面这个问题，觉得很受用，所有就总结了大牛们的回答，也跟着大牛们的脚步，看看有哪些新技术，也跟着学习学习，涨涨见识。</p>
<blockquote>
<p>本文参考]]>
    </summary>
    
      <category term="Android" scheme="http://tikitoo.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[每周阅读清单：程序员修炼，兴趣，TED]]></title>
    <link href="http://tikitoo.me/2016/01/23/reading-list_programmer_interest_ted/"/>
    <id>http://tikitoo.me/2016/01/23/reading-list_programmer_interest_ted/</id>
    <published>2016-01-23T13:43:30.000Z</published>
    <updated>2016-01-26T14:56:35.501Z</updated>
    <content type="html"><![CDATA[<p>不知不觉快要过年了，估计大家也都比较忙吧。这一周也上了六天，刚好今天你晚上有点空闲时间，就来总结这周工作和学习发现的好东西和好文章，来分享给大家。<br>我平常获取技术和文章大都在微博，微信，遇到好的博客都会使用Feedly 来订阅，遇到好的文章来不及看都会放在Pocket 来看。今天阅读清单也到了第二期了，也希望能给大家一些帮助。</p>
<h2 id="技术文章">技术文章</h2><hr>
<ul>
<li><p><a href="http://www.race604.com/android-weekly-30/" target="_blank" rel="external">Android 周报（第 30 期）</a><br>这个是<a href="http://weibo.com/devandroid" target="_blank" rel="external">@Android 笔记</a> 维护的，推荐了性能优化，APK 瘦身等其他方面的文章。有空大家可以去看看，跟着大牛们涨涨经验。</p>
</li>
<li><p><a href="https://imququ.com/post/four-ways-to-post-data-in-http.html" target="_blank" rel="external">四种常见的 POST 提交数据方式</a><br>可能服务端和前端对这些特别熟悉，做客户端也应该去了解 Post 的提交方式，application/x-www-form-urlencoded，multipart/form-data，application/json，text/xml。</p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2015/12/git-workflow.html" target="_blank" rel="external">Git 工作流程</a><br><a href="http://www.ruanyifeng.com/" target="_blank" rel="external">阮一峰</a>老师写的Git 工作流程，讲了Git flow，Github flow，Gitlab flow 三种工作流程，Git flow 实用与我们工作中，Github flow 适用于我们开源项目中，Gitlab flow 将两者综合起来。</p>
</li>
<li><p><a href="http://tech.glowing.com/cn/advices-to-junior-developers/" target="_blank" rel="external">如何提升你的能力？给年轻程序员的几条建议</a><br>一个八年工作经验给年轻程序员的建议与经验。打造你的工具箱，高效的开发环境。开阔你的视野，构建你的技术体系。重视沟通能力的培养。累积你的人脉。寻找发挥你才华的平台。</p>
</li>
</ul>
<h2 id="互联网">互联网</h2><hr>
<ul>
<li><a href="https://www.zhihu.com/question/39377598" target="_blank" rel="external">微信应用号将会对开发者有哪些影响？</a><br>微信应用号，什么鬼？难道又是一个Hybrid App？让我们期待吧。网上也有很多讨论的文章，在这里就不多说了。</li>
</ul>
<h2 id="人文">人文</h2><hr>
<ul>
<li><p><a href="">什么是【真正的】兴趣爱好？以及它有啥好处？</a><br>其实我们所谓自己感兴趣的东西，其实不过是随便说说，也可能是说给人听的。看了这篇文章，你会很受启发。有条件科学上网的可以自己使用Google 搜一下吧。</p>
</li>
<li><p><a href="http://www.huxiu.com/article/31102/1.html" target="_blank" rel="external">人类创造未来的思想先锋：这些 TED 演示深深震撼着我们</a><br>作者作为一个中国的在美国的留学生，自己也见证了TED 的舞台上这么多年让人惊叹的科技和事情。利用仿生学让下肢残废的人重新站立起来，甚至让舞者重新站在舞台上。乔布斯在TED第一次展示他的Macintosh 电脑。 Sun 公司最先介绍了Java 语言，现在已经是编程语言的中流砥柱。</p>
</li>
</ul>
<hr>
<p><img src="http://ww2.sinaimg.cn/large/68622377gw1f00ivyo4lsj20760760t7.jpg" alt="安卓同学的公众号，更多分享..."></p>
<center>Tikitoo 的公众号，更多分享…</center>
]]></content>
    <summary type="html">
    <![CDATA[<p>不知不觉快要过年了，估计大家也都比较忙吧。这一周也上了六天，刚好今天你晚上有点空闲时间，就来总结这周工作和学习发现的好东西和好文章，来分享给大家。<br>我平常获取技术和文章大都在微博，微信，遇到好的博客都会使用Feedly 来订阅，遇到好的文章来不及看都会放在Pocket]]>
    </summary>
    
      <category term="阅读清单" scheme="http://tikitoo.me/tags/%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 中WebView 的使用]]></title>
    <link href="http://tikitoo.me/2016/01/05/android-webview-note/"/>
    <id>http://tikitoo.me/2016/01/05/android-webview-note/</id>
    <published>2016-01-05T15:39:41.000Z</published>
    <updated>2016-01-20T13:17:32.686Z</updated>
    <content type="html"><![CDATA[<p>我们都知道Webview 是用来加载网页的，底层使用Webkit 来实现的。首先要在清单文件里注册网络请求权限</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.INTERNET"</span> /&gt;</span><br></pre></td></tr></table></figure>
<p>如果使用外部程序（浏览器）打开</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Uri uri = Uri.parse(<span class="string">"http://www.example.com"</span>);</span><br><span class="line"> Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW, uri);</span><br><span class="line"> startActivity(intent);</span><br></pre></td></tr></table></figure>
<h2 id="如果使用WebView_来打开">如果使用WebView 来打开</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WebView webview = <span class="keyword">new</span> WebView(<span class="keyword">this</span>);</span><br><span class="line">setContentView(webview);</span><br><span class="line">webview.loadUrl(<span class="string">"http://www.zhihu.com"</span>); <span class="comment">// notice http://</span></span><br></pre></td></tr></table></figure>
<h2 id="加载网页">加载网页</h2><p>一共有四种不同的方法，基本上一看就一目了然。可以使用字符串或者网页，设置MimeType 和编码。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span>	<span class="title">loadData</span><span class="params">(String data, String mimeType, String encoding)</span></span><br><span class="line"><span class="keyword">void</span>	<span class="title">loadDataWithBaseURL</span><span class="params">(String baseUrl, String data, String mimeType, String encoding, String historyUrl)</span></span><br><span class="line"><span class="keyword">void</span>	<span class="title">loadUrl</span><span class="params">(String url)</span></span><br><span class="line"><span class="keyword">void</span>	<span class="title">loadUrl</span><span class="params">(String url, Map&lt;String, String&gt; additionalHttpHeaders)</span></span></span><br></pre></td></tr></table></figure>
<p>之前遇到过一个问题，比如我们有个Base Url 后面的参数需要动态来传，我们可以使用Uri 的构造器来拼凑（当然你也可以手拼字符串）。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mUrl = <span class="keyword">new</span> Uri.Builder()</span><br><span class="line">      .encodedPath(BASE_URL + <span class="string">"/user"</span>)</span><br><span class="line">      .appendQueryParameter(<span class="string">"age"</span>, age)</span><br><span class="line">      .appendQueryParameter(<span class="string">"sex"</span>, sex)</span><br><span class="line">      .appendQueryParameter(<span class="string">"token"</span>, token)</span><br><span class="line">      .build().toString();</span><br></pre></td></tr></table></figure>
<h2 id="设置一些高级的属性（比如：JS）">设置一些高级的属性（比如：JS）</h2><p>当WebView 第一次初始化，会获得一组默认值。<br> 我们可以使用WebView.getSettings() 方法来获取Settings 对象，来自定义设置一些属性。<br>当WebView 被摧毁，调用WebView.getSettings()，将会抛出IllegalStateException。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WebSettings webSettings = myWebView.getSettings();</span><br><span class="line">webSettings.setJavaScriptEnabled(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure>
<p>一般会有set 和get 两组方法，有设置JS，缩放，字体大小，use-agent，保存表单数据等等其他属性。</p>
<h2 id="监听状态">监听状态</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myWebView.setWebViewClient(<span class="keyword">new</span> WebViewClient());</span><br></pre></td></tr></table></figure>
<p>我们可以继承WebViewClient，重写下面的一些方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> <span class="comment">// 可以重写</span></span><br><span class="line"><span class="keyword">void</span> <span class="title">onPageStarted</span><span class="params">(WebView view, String url, Bitmap favicon)</span> <span class="comment">// 初始化一些数据</span></span><br><span class="line"><span class="keyword">void</span> <span class="title">onPageFinished</span><span class="params">(WebView view, String url)</span> <span class="comment">// 网页加载完成</span></span></span><br></pre></td></tr></table></figure>
<p>shouldOverrideUrlLoading() 方法，我们可以设置404 页面，在js 中传输数据，在这里捕获，特殊处理。例如：在网页中打开App，就可以处理。</p>
<p>除了上面常用的，还有拦截请求，获取的错误，重写键盘事件，认证等等。</p>
<p>我们 也可以使用WebChromeClient，加载WebView 的一些属性，比如alert，prompt，进度条，可以让WebView 更加丰富。</p>
<h2 id="和JS_交流">和JS 交流</h2><p><strong>在Java 代码中调用JS</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String value = <span class="string">"javascript:call()"</span>;</span><br><span class="line">mWebView.loadUrl(value);</span><br></pre></td></tr></table></figure>
<p>除了上面这样，我们也可以给方法传出参数，进行计算。<br><strong>在JS 代码中调用Java</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function sumToJava(num1, num2) &#123;</span><br><span class="line">        window.android.onSumResult(num1 + num2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@JavascriptInterface</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSumResult</span><span class="params">(<span class="keyword">int</span> result)</span> </span>&#123;</span><br><span class="line">    WebViewActivity.<span class="keyword">this</span>.showToast(<span class="string">"result: "</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要注意的是@JavascriptInterface 需要将TargetSDK 设置为17 或者更高，而且也有安全问题。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showAndroidToast</span><span class="params">()</span> &#123;</span></span><br><span class="line">        window.android.showToast<span class="params">(<span class="string">"Hello Android!"</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">()</span> &#123;</span></span><br><span class="line">        alert<span class="params">(<span class="string">"3242"</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">call</span><span class="params">(num)</span> &#123;</span></span><br><span class="line">        alert<span class="params">(num)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sumToJava</span><span class="params">(num1, num2)</span> &#123;</span></span><br><span class="line">        window.android.onSumResult<span class="params">(num1 + num2)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mWebView.setWebViewClient(<span class="keyword">new</span> WebViewClient());</span><br><span class="line">mWebView.addJavascriptInterface(<span class="keyword">new</span> WebAppInterface(<span class="keyword">this</span>), <span class="string">"android"</span>); <span class="comment">// js 中的名字</span></span><br><span class="line">mWebView.setWebChromeClient(<span class="keyword">new</span> WebChromeClient() &#123;&#125;);</span><br><span class="line"></span><br><span class="line">String save = <span class="string">"javascript:save()"</span>;</span><br><span class="line">String call = <span class="string">"javascript:call(\""</span> + <span class="string">"content"</span> + <span class="string">"\")"</span>;</span><br><span class="line">call = <span class="string">"javascript:sumToJava(1, 2)"</span>;</span><br><span class="line">mWebView.loadUrl(call);</span><br></pre></td></tr></table></figure>
<p>如果我们不适用@JavascriptInterface，可以使用WebView 重写shouldOverrideUrlLoading(WebView view, String url)，将发送的链接捕获处理。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">openApp</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">window</span>.location = open_app:<span class="comment">//com.android.camera;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="参考">参考</h2><ul>
<li><a href="http://constgu.iteye.com/blog/1744106" target="_blank" rel="external">【原创】【源码分析】Android平台webkit组件java层代码分析 - - ITeye技术网站</a></li>
<li><a href="http://developer.android.com/intl/zh-cn/guide/webapps/webview.html" target="_blank" rel="external">Building Web Apps in WebView - Android Developers</a></li>
</ul>
<ul>
<li><a href="http://developer.android.com/intl/zh-cn/reference/android/webkit/WebSettings.html" target="_blank" rel="external">WebSettings - Android Developers</a></li>
<li><a href="http://droidyue.com/blog/2014/09/20/interaction-between-java-and-javascript-in-android/" target="_blank" rel="external">Android中Java和JavaScript交互 - 技术小黑屋</a></li>
<li><a href="http://kymjs.com/code/2015/05/03/01/" target="_blank" rel="external">深入讲解WebView——上 - 开源实验室-张涛</a></li>
<li><a href="http://kymjs.com/code/2015/05/04/01/" target="_blank" rel="external">深入讲解WebView——下 - 开源实验室-张涛</a></li>
<li><a href="http://www.pedant.cn/2014/09/10/webview-optimize-points/" target="_blank" rel="external">Android WebView开发问题及优化汇总 - 书呆子精神院</a></li>
<li><a href="http://rensanning.iteye.com/blog/2043049" target="_blank" rel="external">Android中JavaScript和Native之间的Bridge</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>我们都知道Webview 是用来加载网页的，底层使用Webkit 来实现的。首先要在清单文件里注册网络请求权限</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class]]>
    </summary>
    
      <category term="Android" scheme="http://tikitoo.me/tags/Android/"/>
    
      <category term="WebView" scheme="http://tikitoo.me/tags/WebView/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 开发者必备的书单]]></title>
    <link href="http://tikitoo.me/2016/01/02/android-book/"/>
    <id>http://tikitoo.me/2016/01/02/android-book/</id>
    <published>2016-01-02T13:39:41.000Z</published>
    <updated>2016-01-26T14:56:28.494Z</updated>
    <content type="html"><![CDATA[<p>大家好，最近一段时间，Android 方面的书籍可谓是百花齐放，这几本书的作者都是在一线互联网公司奋斗的工程师，他们把多年的工作经验，身心耕植，汇聚成一本书。作为菜鸟的我们，只有一睹大神的风采了。所以借这个周末，我也列举了一些书，作为一个Android 开发工程师，这些书都是不可多得的好书，书中知识迟早是要掌握的。</p>
<p>我们都知道开发Android App 是用Java 语言的，当然你也可以使用其他语言来开发Android，当然主流还基本上都是用Java，所以先来给大家推荐几本Java 书籍，这几本书籍不必都看完采取学习Android，但随着学习的深入，就有点捉襟见肘了，所以要提升Java 的技能的。</p>
<h2 id="《深入浅出Java》"><a href="">《深入浅出Java》</a></h2><p>作为入门书籍，深入浅出系列，一直是浅显易懂，所以作为入门太合适不过了。<br><img src="http://upload-images.jianshu.io/upload_images/40592-d09723fefd39c7ea.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="《Think_in_Java_（Java_编程思想）》"><a href="">《Think in Java （Java 编程思想）》</a></h2><p>如果你是初学者，可以跳过这本书，但你稍微有点经验，这本书就逃脱不过了，当你觉得Java 水品想要从菜鸟向大神进阶，那就拿这本书自虐吧。<br><img src="http://upload-images.jianshu.io/upload_images/40592-2b0caeb9fe998f49.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="《第一行代码》"><a href="">《第一行代码》</a></h2><p>郭霖大神的书，之前自学，看他的博客也使受益匪浅。书中讲述了Android 中基本的内容，比如四大组件，数据存储，网络请求，数据库等。如果你想快速入门Android，那么这本书你不该错过。<br><img src="http://upload-images.jianshu.io/upload_images/40592-2c5a62efea4e60f1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="《Android_Programming:_The_Big_Nerd_Ranch_Guide_(2nd_Edition)（Android_编程：权威指南）》"><a href="">《Android Programming: The Big Nerd Ranch Guide (2nd Edition)（Android 编程：权威指南）》</a></h2><p>这本书是国外知名培训机构Bignerdranch（我想说，这才叫培训机构，国内的xx，我就无力吐槽了） 出的入门书籍，书中以项目为主题，从最项目相关的知识点开始，循序渐进，从最简单的，慢慢来提升。<br><img src="http://upload-images.jianshu.io/upload_images/40592-2fe0a56b324408f2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="《Head_First_Android_Development（深入浅出Android_开发）》"><a href="">《Head First Android Development（深入浅出Android 开发）》</a></h2><p>又一深入浅出系列的书，不过这本好像还没有翻译成中文，书中的内容也是很基础的，和《第一行代码》中讲的内容重合度很高，如果你英文不错，你可以来尝试来读。<br><img src="http://upload-images.jianshu.io/upload_images/40592-7d4eaf9e79b70976.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="《Android_群英传》"><a href="">《Android 群英传》</a></h2><p>作者名宜生，在群里被我们唤作医生，不过医生的博客何在慕课网的教学视频，都是非常值得读的，他出的书，也是非常值得看的。作为进阶书，书中不仅将的新手比较难以掌握的View 绘制，性能优化，也讲述Android Studio 的使用和Android 5.0 的新特性。<br><img src="http://upload-images.jianshu.io/upload_images/40592-cdf6c11dfa4663ec.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="《Android_开发艺术探索》"><a href="">《Android 开发艺术探索》</a></h2><p>作为新手，从写UI，使用框架，写多了就像小学生交作业一样，也仅仅停留在了只会使用的层面上，那么这本书，则带你去更深次的去理解Android 开发，让你开发更加得心应手，书中讲解View 的工作原理和事件体系，性能分析，深入理解动画，JNI 等等。<br><img src="http://upload-images.jianshu.io/upload_images/40592-8d06b1c699e927d7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="《Android_设计模式源码分析》"><a href="">《Android 设计模式源码分析》</a></h2><p>在Android 中，总有一些代码使用感觉很熟悉，比如像AlertDialog，对的，在Android 中一样有大量使用设计模式。这本书深入分析Android 源码中使用到的设计模式。<br><img src="http://upload-images.jianshu.io/upload_images/40592-ed866630bfeca94f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="《Android_开发精要》"><a href="">《Android 开发精要》</a></h2><p>作者是豌豆荚Android 负责人范怀宇，书的内容， 从Android 源码中抽次剥茧的“精华”和“要点”，虽然书本不是特别厚，但拿着这本书就像武功宝典，书中的内容吃透了，你就练就了盖世神功。<br><img src="http://upload-images.jianshu.io/upload_images/40592-d03439c94c22ba8c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="《App_研发录》"><a href="">《App 研发录》</a></h2><p>这本书相对于其他书，这本显得更加特别独特，其他都是讲的纯Android 技术，这本书从更加宏观的角度，讲怎么规范开发，让开发更高效，比如重构，封装网络库，还分析了一些经典的场景，崩溃分析，持续集成（CI）等等。<br><img src="http://upload-images.jianshu.io/upload_images/40592-58c3586a8b4d0dbc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>市面上的书多如牦牛，能发现一本好书也是不易的。上面的书，也希望能为大家Android 开发有一些帮助，当然了，书中的有些内容，随着时间的迁移，书中的内容也会变得落后，所以除了看书，我们也应该时刻关注Android 官方的博客和Android 发布的新版本，还有关注微博上的大牛和订阅一些头条日报来学习新技术。</p>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://mp.weixin.qq.com/s?__biz=MzA4MTg4MjkzMw==&amp;mid=401674870&amp;idx=1&amp;sn=f71177cb600a78e70a3fa3616e42cc2a#rd" target="_blank" rel="external">Android 开发者必备的书单</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<code>AndroidMate</code><br>公众号：<code>安卓同学</code><br><img src="http://ww2.sinaimg.cn/large/68622377gw1f00ivyo4lsj20760760t7.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>大家好，最近一段时间，Android 方面的书籍可谓是百花齐放，这几本书的作者都是在一线互联网公司奋斗的工程师，他们把多年的工作经验，身心耕植，汇聚成一本书。作为菜鸟的我们，只有一睹大神的风采了。所以借这个周末，我也列举了一些书，作为一个Android 开发工程师，这些书都]]>
    </summary>
    
      <category term="android" scheme="http://tikitoo.me/tags/android/"/>
    
      <category term="书单" scheme="http://tikitoo.me/tags/%E4%B9%A6%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015 年——懵懵懂懂，跌跌撞撞]]></title>
    <link href="http://tikitoo.me/2015/12/26/2015-summer/"/>
    <id>http://tikitoo.me/2015/12/26/2015-summer/</id>
    <published>2015-12-26T05:35:16.000Z</published>
    <updated>2016-01-07T14:29:06.609Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>如果说2014 年是迷茫，那么2015 年就是懵懂，我希望2016 是成长。</p>
</blockquote>
<h2 id="读过的书">读过的书</h2><p>苏东坡传<br>从零到一<br>硅谷百年史<br>暗时间<br>简明HTTP 指南<br>HTTP 权威指南（未完）<br>Head First Java<br>第一行代码</p>
<h2 id="看过的电影">看过的电影</h2><p>宋家王朝<br>港囧<br>辛亥革命<br>天若有情<br>我是路人甲<br>饮食男女<br>饮食男女（新）<br>重返二十岁<br>罗马假日<br>西西里的美丽传说<br>四大名捕<br>四大名捕2<br>太平轮上<br>卧虎藏龙<br>大上海<br>一个人的武林<br>庞贝末日<br>我想和你好好的<br>分手合约<br>第一次<br>天堂口<br>一路惊喜<br>心花路放<br>宫锁沉香<br>钟馗伏魔：雪妖魔灵<br>模仿游戏<br>重庆森林<br>太极<br>太极2<br>天堂电影院<br>美丽人生</p>
<h2 id="看过的电视剧">看过的电视剧</h2><p>琅琊榜<br>好大一个家<br>京华烟云</p>
<p>发现书没有读过几本，电影几乎快达到每周一部了，电视剧就是感觉很好的才会去看。双十一买了很多书都还没有看多少，不过相对于以前还是好一点，所以与其无聊随便看东西，不如提前把好东西都预备好，觉得自己没事就来看吧，而不是看到好东西，就想过眼云烟一样。</p>
<h2 id="工作">工作</h2><p>今年有两份工作</p>
<p><strong>琥珀天气</strong><br>我自学Android 之后的第一份工作（实习），公司使用很少而且很老的开源库，没有自定义View，代码混乱。并不是说我离开了吐槽公司，我在这个公司整天加班，收获多少，住的地方离得很远，整天劳累我也无力做其他的事情。当然我也并没有多少努力，最后的结果就是我被辞退。<br>第一份实习结束，我又开始找工作了，感觉也挺难找的，一份实习并没有为我加分多少，虽然面试了不少，但是在Java 基础，Android 基础上还是有欠缺，有的公司一上来就给一道算法题，就没有了然后了。</p>
<p><strong>绿葡科技</strong><br>就是我现在的工作，是一个外包公司，也不单单是一个外包公司，还有自己的合作的项目（就是以后的升级迭代都负责），刚开始的一两个项目，进步还是挺大的，也熟悉的逻辑，使用很新很成熟的开源项目和框架，自己代码的质量也有所提高，最近的一段时间相对于比较闲，自己好像也懒散下来了。老大作为技术，这一点对做技术还是会好一点，至少技术这边不会被边缘化。自己做技术也有自己的学习空间。放任的管理就是只能自律，自我学习。</p>
<h2 id="社交">社交</h2><p>微博：粉丝已经达到了2.5k。上半年浪费在了很多时间，下半年理性了很多，别人的微博，要有自己的判断力，然后转发。鸡汤类的基本上都取消了关注。<br>简书：2k，因为一篇关于大学生的App，被简书主页推荐了，余温一直持续到现在，粉丝一直在涨。以后非技术文章还是会在简书上写。<br>知乎：1.1k，也是一两个回答，都有一千左右个赞，现在回答少了，看的也少了，知乎的东西现在受影响的也比较多，所以就是少上。<br>微信公众号：1.1k，微信现在联系人有两百个人，有一般是不认识的吧。有公共号关注者加我的，也有我加别人的，看到别人的生活，对自己也是一个激励吧。<br>Github：几十个关注。这一年基本上什么都没有。</p>
<h2 id="生活">生活</h2><p>多了一台魅蓝Note 2：上一部手机用了两年多，基本也废了。这台也让我体验很多的App，手机作为常用的工具，也不会天天抱着它。<br>Kindle 低配版，一直用它读了几本书，几百块不多读几本书，都亏了。<br>网易云音乐：这是几年发现最好的东西之一吧，烦躁的时候，听听歌，让自己静下来吧。<br>搬了一次家，不太顺利，不过现在环境也适合一个人静静的思考，做一些自己喜欢的使用。<br>现在也偶尔做饭，发现做饭食材的新鲜度和火候都很重要。<br>原来成长就是与自己相处，和自己相处好了，看待四周也就会好了许多。<br>原来有些东西再也回不去了，有些事情，你也不得不做。</p>
<h2 id="认知，眼界">认知，眼界</h2><p>曾经自己认为很崇拜的人，正确的东西，后来发现不是那样。<br>曾经感觉谷歌什么都很好，后来才发现，谷歌也变成了一个大公司，很多产品并不是很好，做的很多实用并不是让人很理解。<br>三观：孔老夫子的儒家思想，几千年后一直在中国人的心中一直扎根生长，三从四德，大男子主义，女人被这个时代弱化等等。我们口口声说男人比女人强，其实都是儒家思想的表现。<br>要么赚很多很多的钱，要么读好多好多的书，要么让自己涨涨阅历，见识。<br>不要让自己局限在当前的周围人中，看看国外发生了什么，看看国外的同行人在做什么，这对以后的选择，会有很多的帮助。<br>如果你认为一个很值得假如的公司，不如提早观察观察吧，这个公司的人，产品，用户，投资人，增长速度，是否快速迭代，创始人整天在做什么，其实选公司就是在追随常创始人。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>如果说2014 年是迷茫，那么2015 年就是懵懂，我希望2016 是成长。</p>
</blockquote>
<h2 id="读过的书">读过的书</h2><p>苏东坡传<br>从零到一<br>硅谷百年史<br>暗时间<br>简明HTTP 指南]]>
    </summary>
    
      <category term="总结" scheme="http://tikitoo.me/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="生活" scheme="http://tikitoo.me/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开发者必备的网站]]></title>
    <link href="http://tikitoo.me/2015/11/02/developer-website/"/>
    <id>http://tikitoo.me/2015/11/02/developer-website/</id>
    <published>2015-11-02T13:43:09.000Z</published>
    <updated>2016-01-26T14:59:32.022Z</updated>
    <content type="html"><![CDATA[<p>前两天是1024 程序员节，也祝大家过得愉快。本来是想提前写的，一直拖到现在（拖延症致死呀)，所以就大家多等了几天，前两天我写的文章《Android 开发者必备的网站》，今天为大家推荐一些开发者必知的网站，除了一些基本的技术网站，还有一些交流的网站，不多说那就进入正题吧。</p>
<p>我觉得，作为程序员，开发者，科学上网应该就像人的尊严一样，没有它，你写代码都会浑身不舒服。</p>
<h2 id="Google">Google</h2><hr>
<p>不管是新手程序员还是老手程序员，工作和学习过程中都会遇到一些问题，那么遇到问题利用Google 搜索估计是最快解决方案。<br>而且Google 的结果，让你很容易解决问题。关键是Google 不做恶，没广告。</p>
<h2 id="Github">Github</h2><hr>
<p>作为全世界最大的同性交流网站（代码托管平台），上面有各种大牛，作为新手的我只能默默地去撸大牛的代码，期待能和大牛的差距一步步减少。除了学习之外，你也可以利用闲暇的时间来来将自己的开源项目放在上面，从侧面也是对自己的宣传，对找工作也有帮助。<br>类似的有国外的Bitbucket，gitcafe，coding.net 等等。</p>
<h2 id="StackOverflow">StackOverflow</h2><hr>
<p>最大的技术问答网站，Google 搜索技术问题，结果很大的比例都来自StackOverflow，而且可能我们折腾好久的问题，大牛的一句话都点中要害。</p>
<h2 id="HackNews">HackNews</h2><hr>
<p>Hacker News 是一家关于计算机黑客和创业公司的社会化新闻网站，你可以讲自己写的博客或者对一些业界新闻拿出来来讨论。就算自己在上面多看看也是很涨见识的。而且我注意到，国外的很多人的博客都不留评论框，一般写完文章，就会放在HackNews 讨论。国内也有类似的网站。<a href="http://news.dbanotes.net/" target="_blank" rel="external">Startup News</a>。</p>
<h2 id="InfoQ"><a href="http://www.infoq.com/cn/" target="_blank" rel="external">InfoQ</a></h2><hr>
<p>InfoQ 是一个面对开发的服务网站，而他的自我介绍：促进软件开发领域知识与创新的传播。在上面你会看到很多专业人士分享的专业知识，他们分享的东西，可能是一般开发者很难接触到的。由InfoQ 主办的Qcon，ArchSummit 大会，也是非常值得一去的。</p>
<h2 id="V2ex"><a href="http://v2ex.com/" target="_blank" rel="external">V2ex</a></h2><hr>
<p>我觉得V2ex 算是一个程序员吐槽，交流的网站。反正上面由好多好多程序员。而且有个专栏叫《酷工作》，反正由好多求职和招聘的。</p>
<h2 id="SegmentFault"><a href="http://segmentfault.com/" target="_blank" rel="external">SegmentFault</a></h2><hr>
<p>SegmentFault 是一个面向开发者的技术问答社区，你可以在上面问答，写博客，线下交流活动等等。</p>
<h2 id="开源中国">开源中国</h2><hr>
<p>开源中国是目前中国最大的开源技术社区，为IT 开发者提供了一个发现、使用、并交流开源技术的平台。</p>
<h2 id="技术博客">技术博客</h2><hr>
<p>我们在学习过程中，很多时候都是看别人的技术博客来成长的，当然技术博客网站由很多。比如CSDN，cnBlogs，51CTO，itEyes 等等。</p>
<h2 id="Mooc">Mooc</h2><hr>
<p>Mooc 翻译为中文叫做在线网络公开课，Mooc　的愿景是让那些没有机会接受正式教育的人能接受教育，主要做技术的Mooc　也有很多。比如像国外的coursera，edx，udacity，国内由像慕课网，极客学院等等。</p>
<h2 id="开发者服务网站">开发者服务网站</h2><hr>
<p>这个标题可能叫可能叫的不太准确，<br><a href="gold.xitu.io/">稀土掘金</a>：挖掘最优质的互联网技术。它主要邀请一些业界比较资深的开发者，作为联合编辑来推荐文章，文章质量有了保证。<br><a href="http://toutiao.io/" target="_blank" rel="external">开发者头条</a>：程序员的首选阅读分享平台。<br><a href="blog.jobbole.com/">博乐在线</a>：一个专注于IT互联网的聚合分享站点。<br>当然其他的也很多啦，比如像ImportNew，酷勤网等等。</p>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://www.jianshu.com/p/874ff12a4c01" target="_blank" rel="external">http://www.jianshu.com/p/874ff12a4c01</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<code>AndroidMate</code><br>公众号：<code>安卓同学</code><br><img src="http://ww2.sinaimg.cn/large/68622377gw1f00ivyo4lsj20760760t7.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>前两天是1024 程序员节，也祝大家过得愉快。本来是想提前写的，一直拖到现在（拖延症致死呀)，所以就大家多等了几天，前两天我写的文章《Android 开发者必备的网站》，今天为大家推荐一些开发者必知的网站，除了一些基本的技术网站，还有一些交流的网站，不多说那就进入正题吧。<]]>
    </summary>
    
      <category term="website" scheme="http://tikitoo.me/tags/website/"/>
    
      <category term="网站" scheme="http://tikitoo.me/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio有哪些非常好用的插件？ - Tikitoo 的回答 - 知乎]]></title>
    <link href="http://tikitoo.me/2015/09/27/android-studio-the-very-useful-plugins/"/>
    <id>http://tikitoo.me/2015/09/27/android-studio-the-very-useful-plugins/</id>
    <published>2015-09-27T11:49:59.000Z</published>
    <updated>2015-09-27T12:01:50.000Z</updated>
    <content type="html"><![CDATA[<p>我要回答了。你们只负责点赞吧。</p>
<p>上面有好多大牛的推荐有很多不错。</p>
<p><strong>Android ButterKnife Zelezny</strong><br>不想写findViewById() 就用ButterKnife，ButterKnife 的注释不想写就用这个插件。</p>
<p><strong>Genymotion</strong><br>用了Genymotion 的虚拟机再也不用系统带的虚拟机了，配合这个插件，可以在Android Studio 直接打开虚拟机。</p>
<p><strong>GsonFormat</strong><br>把 JSON 字符串直接实例化成类，每次想想写Model 类想死的心都有了，有了这个插件Model 类也不用写了。</p>
<p><strong>Fir.im upload</strong><br>使用Fir.im 内测平台很方便有木有。但每次都把文件使用网页上传，不符合我们这么高大上的行业。有了这个插件，上传只用添加token，第一次选择生成的apk 文件的路径，就可以自动上传了。具体教程请看Fir.im 的官方教程。</p>
<blockquote>
<p><a href="http://blog.fir.im/geng-xin-ri-zhi150828/" target="_blank" rel="external">更新日志 - fir.im 回归，上线 Android Studio 插件</a></p>
</blockquote>
<p><strong>Markdown</strong><br>比如我们要写README 的时候，或者其他文档的时候，使用MD 的插件可以预览效果。</p>
<p><strong>CodeGlance</strong><br>在编辑代码最右侧，显示一块代码小地图。</p>
<p><strong>Android Material Design Icon Generator</strong><br>自动生成不同尺寸的Material Design Icon。</p>
<p>PS: Android Studio 1.4 Preview 1 Canary Channel 中添加了Vector Asset 功能，你可以自动添加Material Design Icon 或者自己自定义的SVG 文件，生成VectorDrawables 文件，使用直接引用Drawable 文件。</p>
<p>参考</p>
<ul>
<li><a href="https://www.quora.com/What-are-some-of-the-best-Android-Studio-plugins" target="_blank" rel="external">The best Android Studio plugins</a></li>
<li><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial/blob/master/plugins-settings.md" target="_blank" rel="external">judasn/IntelliJ-IDEA-Tutorial · GitHub</a></li>
</ul>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://tikitoo.me/android-studio-the-very-useful-plugins">Android Studio有哪些非常好用的插件？</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<a href="http://weixin.sogou.com/gzh?openid=oIWsFt0tWyaAMPcOVIEsvZcHnPXA" target="_blank" rel="external">AndroidMate</a><br><img src="http://ww3.sinaimg.cn/mw690/68622377gw1eqmpbo4ugzj209k09kmx3.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>我要回答了。你们只负责点赞吧。</p>
<p>上面有好多大牛的推荐有很多不错。</p>
<p><strong>Android ButterKnife Zelezny</strong><br>不想写findViewById() 就用ButterKnife，ButterKnif]]>
    </summary>
    
      <category term="Android" scheme="http://tikitoo.me/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://tikitoo.me/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio live templates 的使用]]></title>
    <link href="http://tikitoo.me/2015/09/13/android-studio-live-templates-md/"/>
    <id>http://tikitoo.me/2015/09/13/android-studio-live-templates-md/</id>
    <published>2015-09-13T10:22:43.000Z</published>
    <updated>2015-09-13T11:05:58.000Z</updated>
    <content type="html"><![CDATA[<p>在Android Studio 中，我们会发现有时候我们有一些打出一些拼写就会出来一些东西。</p>
<p>比如：<em>psvm</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>那么这个是怎么实现的呢？</p>
<p>其实Android Studio 中有一个叫<strong>Live Templates</strong> 的东西。在设置中直接搜索就可以找到。<br>默认的中，系统已经有很多很方便的配置。当然我们也可以自己来编辑。</p>
<p>Bignerdranch 有一篇文章可以来了解看看</p>
<ul>
<li><a href="https://www.bignerdranch.com/blog/android-studio-live-templates/" target="_blank" rel="external">Android Studio Live Templates | Big Nerd Ranch</a></li>
</ul>
<p>更多的详细介绍，可以上IDEA 的官方文档来仔细查看</p>
<ul>
<li><a href="https://www.jetbrains.com/idea/help/live-templates.html" target="_blank" rel="external">Live Templates</a></li>
</ul>
<p>更赞的是，开发大牛把提前配置好的文件放在Github 上了，我等菜鸟就慢慢享用吧。</p>
<ul>
<li><a href="https://github.com/keyboardsurfer/idea-live-templates" target="_blank" rel="external">keyboardsurfer/idea-live-templates</a></li>
</ul>
<p>然后将文件放在下面的文件夹下即可。<br><img src="http://ww3.sinaimg.cn/large/68622377gw1ew10t6z7lyj214f0c0q61.jpg" alt=""></p>
<p>其实还是有点懒，以后有空写一篇详细的教程吧。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在Android Studio 中，我们会发现有时候我们有一些打出一些拼写就会出来一些东西。</p>
<p>比如：<em>psvm</em><br><figure class="highlight java"><table><tr><td class="gutter"><p]]>
    </summary>
    
      <category term="Android Studio" scheme="http://tikitoo.me/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[写给Android 开发的入门教程]]></title>
    <link href="http://tikitoo.me/2015/08/23/android-developer-tutorial/"/>
    <id>http://tikitoo.me/2015/08/23/android-developer-tutorial/</id>
    <published>2015-08-23T06:45:34.000Z</published>
    <updated>2016-01-26T14:59:52.392Z</updated>
    <content type="html"><![CDATA[<p>之前在知乎上回答的问题——《<a href="http://www.zhihu.com/question/19611325" target="_blank" rel="external">初学者学习 Android 开发，有什么好网站推荐？</a>》，就挑了一些大家公认比较好的资源，所以今天就把它整理成博客了，再好好整理一些好的资料分享给大家。其实我觉得，相对于稍微有点经验的人来说，初学者更需要指导，因为初学者没有好的知识体系，所以会走不少弯路，所以我就以我的经验，和在微博，论坛上大家公认的资料整理出来，也希望能帮到大家。</p>
<hr>
<h2 id="Java">Java</h2><ul>
<li><a href="http://item.jd.com/10100190.html" target="_blank" rel="external">O’Reilly：Head First Java（中文版）</a></li>
<li><a href="http://yun.baidu.com/s/1dD5RRQ5" target="_blank" rel="external">Mars 的Java4Android</a></li>
</ul>
<p>其实我倒觉得，初学者可以读一些浅显易懂的书，在以后的学习中，可以再加以巩固，可以读一些深一点的书。</p>
<hr>
<h2 id="Android_书籍">Android 书籍</h2><ul>
<li><a href="http://item.jd.com/11504254.html" target="_blank" rel="external">郭霖《第一行代码》</a></li>
<li><a href="http://item.jd.com/11431307.html" target="_blank" rel="external">Brian Hardy，Bill Phillips《 Android编程权威指南》</a></li>
</ul>
<p>这两本特别适合初学者开入门的。不管是我自身还是从论坛，微博上，对它们的评论都不错。</p>
<hr>
<h2 id="Android_教程">Android 教程</h2><ul>
<li><a href="http://developer.android.com/training/index.html" target="_blank" rel="external">Android 官方入门指南</a></li>
<li><a href="http://hukai.me/android-training-course-in-chinese/" target="_blank" rel="external">序言 | Android官方培训课程中文版(v0.9.4)</a></li>
<li><a href="https://github.com/codepath/android_guides/wiki" target="_blank" rel="external">Home · codepath/android_guides Wiki · GitHub</a></li>
</ul>
<p>对于教程，我的观点是能读官方，就不要读其他，第二个是官方指南的中文版，算是中文翻译中比较好的了。<br>而Codepath 的入门指南，也可以和官方相比，也是不逊色的，相比较官方的，它的教程更具有实战意义，每一个都是一个小Demo，做完会让你很有成就感。</p>
<hr>
<h2 id="Android_视频">Android 视频</h2><ul>
<li><a href="http://marschen.com/portal.php" target="_blank" rel="external">Mars——Android 开发视频教程</a></li>
<li><a href="http://pan.baidu.com/s/1qWAWU52" target="_blank" rel="external">黎活明——8天快速掌握Android视频</a></li>
<li><a href="http://www.imooc.com/course/programdetail/pid/33" target="_blank" rel="external">慕课网——Android 开发视频</a></li>
<li><a href="http://android.jikexueyuan.com/" target="_blank" rel="external">极客学院——Android开发,安卓开发教程</a></li>
</ul>
<p>这些你都不知道，就有点孤陋寡闻了。</p>
<hr>
<h2 id="Android_开发工具">Android 开发工具</h2><ul>
<li><p><a href="https://github.com/inferjay/AndroidDevTools" target="_blank" rel="external">inferjay/AndroidDevTools</a><br>对于不能科学上网来说，可以使用这里提供的国内镜像来下载各种开发工具和SDK。</p>
</li>
<li><p>Android Studio<br>如果之前还有纠结的话，那么现在你还不使用Android Studio，就说不过去了。Bug 也变得少了，性能优化，版本迭代也特别快。对于以前没有使用过AS 的人来说，当然学习曲线也是比较陡峭的。我推荐两篇文章可以来入门，以后遇到的问题，可以到时候来搜索解决。</p>
<ul>
<li><a href="http://stormzhang.com/" target="_blank" rel="external">Stormzhang - Android Studio系列教程</a></li>
<li><a href="http://www.jianshu.com/p/36cfa1614d23" target="_blank" rel="external">Tikitoo - Android Studio 入门指南</a></li>
</ul>
<hr>
<h2 id="Android_开源App">Android 开源App</h2></li>
<li><a href="https://github.com/googlesamples?utf8=%E2%9C%93&amp;query=android" target="_blank" rel="external">Search Android - Google Samples</a><br>谷歌官方会经常推出一些Android 新技术的Demo，比如每年的IO App 等等。</li>
<li>Android Apidemos<br>下载SDK 之后，会在 <code>&lt;sdk-insall-folder&gt;/samples/</code> 中查看系统自带的好多Demo。</li>
<li><a href="http://www.zhihu.com/question/26687642" target="_blank" rel="external">有没有适合 Android 开发初学者的 App 源码推荐？</a><br>知乎上有好多大牛推荐的，也可以值得关注一下，找到适合自己的来练练手。</li>
</ul>
<hr>
<h2 id="Android_学习经验分享">Android 学习经验分享</h2><p>还有一些大牛对入门者的入门文章，我觉得对于初学者来说，会避免不少弯路。</p>
<ul>
<li><a href="http://www.stormzhang.com/android/2014/07/07/learn-android-from-rookie/" target="_blank" rel="external">StormZhang - Android学习之路</a></li>
<li><a href="http://www.jianshu.com/p/2ee0e74abbdf" target="_blank" rel="external">Tikitoo - 我是如何自学Android，资料分享</a></li>
<li><a href="http://drakeet.me/android_base_road" target="_blank" rel="external">Drakeet - 我推荐的 Android 基础学习路线</a></li>
<li><a href="https://github.com/futurice" target="_blank" rel="external">futurice</a><a href="https://github.com/futurice/android-best-practices" target="_blank" rel="external">android-best-practices - Github</a></li>
</ul>
<hr>
<h2 id="总结">总结</h2><p>作为一个程序员，学会科学上网应该是一种本能，这样就会减少很多不必要的麻烦。</p>
<p>要善于利用搜索引擎，StackOverflow。使用英文关键词搜索，你遇到的99% 的问题，别人都会遇到。</p>
<p>要时刻关注Android 的最新动态。比如Android 的官方博客，还有各种Android Weekly，在微博，知乎关注一些Android 牛人，看他们分享的东西和回答的问题，要让自己与时俱进，才不会被淘汰。</p>
<p>加一些QQ 群，有不会可以问问，相互交流。</p>
<p>Alway Be Coding。当敲的代码多了，你的能力才能慢慢提升，切忌眼高手低。</p>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://tikitoo.me/2015/08/23/android-developer-tutorial/">http://tikitoo.me/2015/08/23/android-developer-tutorial/</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<code>AndroidMate</code><br>公众号：<code>安卓同学</code><br><img src="http://ww2.sinaimg.cn/large/68622377gw1f00ivyo4lsj20760760t7.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前在知乎上回答的问题——《<a href="http://www.zhihu.com/question/19611325" target="_blank" rel="external">初学者学习 Android 开发，有什么好网站推荐？</a>》，就挑了一些大家公认比较]]>
    </summary>
    
      <category term="Android" scheme="http://tikitoo.me/tags/Android/"/>
    
      <category term="Android 入门" scheme="http://tikitoo.me/tags/Android-%E5%85%A5%E9%97%A8/"/>
    
      <category term="Android 开发" scheme="http://tikitoo.me/tags/Android-%E5%BC%80%E5%8F%91/"/>
    
      <category term="Android 教程" scheme="http://tikitoo.me/tags/Android-%E6%95%99%E7%A8%8B/"/>
    
      <category term="自学Android" scheme="http://tikitoo.me/tags/%E8%87%AA%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Tikitoo：来使用利器来提高效率吧]]></title>
    <link href="http://tikitoo.me/2015/08/03/my-liqi/"/>
    <id>http://tikitoo.me/2015/08/03/my-liqi/</id>
    <published>2015-08-03T09:06:11.000Z</published>
    <updated>2015-08-03T09:35:05.000Z</updated>
    <content type="html"><![CDATA[<h2 id="介绍一下你自己和所做的工作。">介绍一下你自己和所做的工作。</h2><p>我是梁义发，网络ID 为Tikitoo。我2014 年毕业，后来自学了Android 开发，现在算是入门Android 开发吧。我也是一名互联网爱好者，也爱写文章。</p>
<h2 id="硬件：">硬件：</h2><ul>
<li>一台在大学买的笔记本，安装了Ubuntu，类Unix 还是适合开发的。</li>
<li>Meizu Note 2，觉得魅族的设计，交互体验都不错的。</li>
<li>入门 Kindle，现在也慢慢开始养成读书的习惯了。</li>
<li>其实还是穷呀，以后会入手Macbook，机械键盘，人体工学椅子。我觉得这些在长期看来都会提升幸福感的。</li>
<li>明知道自己在硬件是没有优势，所以就在软件上下工夫了。</li>
</ul>
<h2 id="软件：">软件：</h2><ul>
<li>开发：使用Android Studio，文本编辑器使用Sublime，现在切换到了Atom。使用WIFI ADB 连接Wifi 来测试应用，很实用。当然还有一些小工具就不说了。</li>
<li>效率工具：有Chrome，Evernote，Pocket，Pushbullet，IFTTT，Keep，SimpleNote，这些工具，会让工作学习更高效。</li>
<li>生活中：也会有像快图，Timi 记账，闹钟One，Google 相册，Mailbox，我是个软件控啦，不过这些软件真的让你省心不少。</li>
<li>生活知识类：比如丁香医生，知性，我觉得生活的常识应该去了解的。</li>
</ul>
<h2 id="你最理想的工作环境是什么？">你最理想的工作环境是什么？</h2><p>弹性的工作时间，不太拥挤而且舒适的桌椅，墙上不应该是光秃禿的，包含一些公司的文化是极好的。</p>
<h2 id="你平时获得工作灵感的方式有哪些？">你平时获得工作灵感的方式有哪些？</h2><p>其实作为一个开发人员，最重要的是对自身专业技能的提升，当然也应该对互联网行业的了解，自己也应该有对它的看法。</p>
<ul>
<li>提升专业技能，主要就是看官方文档，学会使用Google，Stackoverflow，也会使用Feedly 订阅博客，也会看像Android Weekly，开发者头条等等。</li>
<li>微博，知乎，会读一些像36Kr，iFanr 的科技博客，来获取互联网信息。</li>
</ul>
<h2 id="推荐一件生活中的利器给大家">推荐一件生活中的利器给大家</h2><p>Keep：Keep 一个健身App，它会提供一些不同难度的健身教程，就算是以前没有锻炼过的人，也没有太多违和感，我也希望作为技术人员，能坚持锻炼身体。</p>
<p><strong>本文参与了「利器社群计划」，发现更多创造者和他们的工具：<a href="http://liqi.io/community" target="_blank" rel="external">http://liqi.io/community/</a></strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="介绍一下你自己和所做的工作。">介绍一下你自己和所做的工作。</h2><p>我是梁义发，网络ID 为Tikitoo。我2014 年毕业，后来自学了Android 开发，现在算是入门Android 开发吧。我也是一名互联网爱好者，也爱写文章。</p>
<h2 id=]]>
    </summary>
    
      <category term="Tools" scheme="http://tikitoo.me/tags/Tools/"/>
    
      <category term="利器" scheme="http://tikitoo.me/tags/%E5%88%A9%E5%99%A8/"/>
    
      <category term="效率" scheme="http://tikitoo.me/tags/%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Atom 在Ubuntu 中文显示乱码（方块）解决方法]]></title>
    <link href="http://tikitoo.me/2015/07/23/ubuntu-atom-zh-display-squre/"/>
    <id>http://tikitoo.me/2015/07/23/ubuntu-atom-zh-display-squre/</id>
    <published>2015-07-23T03:56:23.000Z</published>
    <updated>2015-07-23T03:59:43.000Z</updated>
    <content type="html"><![CDATA[<p>前几天在Ubuntu上安装了Atom，谁知道在所有地方的中文都显示方块。这让人很郁闷，虽然写程序中文很少,但是总归有写中文的地方吧。之前找了很长时间就都没有找解决办法。所以今天闲了起来，就又来找办法，终于找到了解决办法，所以就来总结一下。</p>
<p>因为是Atom 官方没有提供对中文的显示，所以就自己找解决办法吧，不过网上的大神，已经找到了解决方法。之前在网络上有人说在设置中字体设置为<code>文泉驿正黑</code> 字体，就可以显示了，但是我设置了，但还是显示方块，今天又在网络上看到的，因为Ubuntu 系统默认是没有安装<code>文泉驿正黑</code> 字体的，需要我们手工安装来安装。</p>
<p>我们可以使用下面的方式来安装：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> install ttf-wqy-*</span><br></pre></td></tr></table></figure></p>
<p>安装了之后，使用快捷键 <code>Ctrl + ,</code> 打开设置。在<code>Edit Settings</code> 中的<code>Font Family</code> 中输入<code>&#39;DejaVu Sans Mono&#39;, &#39;文泉驿正黑&#39;</code> 即可。然后在编辑框中中文就可以正常显示了。</p>
<p>今天又测试了Markdown 预览界面，中文还是显示方块，又去找方法了。</p>
<p>在设置界面，打开左边<code>Open Settings Folder</code>，然后打开<code>style.less</code> 文件，添加以下内容即可。</p>
<p><strong>style.less</strong><br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@font-family:</span> <span class="string">'DejaVu Sans Mono'</span>, <span class="string">'文泉驿正黑'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class">.markdown-preview</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="variable">@font-family</span>;</span><br><span class="line">  <span class="tag">atom-text-editor</span><span class="pseudo">::shadow</span> *&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="variable">@font-family</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>除了编辑框，Markdown 预览能正常显示中文外，其他地方可能也会显示不正常，这个时候，我们去网上搜索，基本上就是在配置中添加一些属性即可。</p>
<h2 id="参考">参考</h2><ul>
<li><a href="http://atom-china.org/t/topic/116" target="_blank" rel="external">中文字体问题&amp;讨论</a></li>
<li><a href="http://atom-china.org/t/linux/85/3" target="_blank" rel="external">Linux 下中文显示成方块的解决方案</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>前几天在Ubuntu上安装了Atom，谁知道在所有地方的中文都显示方块。这让人很郁闷，虽然写程序中文很少,但是总归有写中文的地方吧。之前找了很长时间就都没有找解决办法。所以今天闲了起来，就又来找办法，终于找到了解决办法，所以就来总结一下。</p>
<p>因为是Atom 官方]]>
    </summary>
    
      <category term="Atom" scheme="http://tikitoo.me/tags/Atom/"/>
    
      <category term="Ubuntu" scheme="http://tikitoo.me/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 开发工具之ALFI（Android Library Finder）]]></title>
    <link href="http://tikitoo.me/2015/07/07/android-development-tools-of-the-alfi-android-libary-finder/"/>
    <id>http://tikitoo.me/2015/07/07/android-development-tools-of-the-alfi-android-libary-finder/</id>
    <published>2015-07-06T16:12:37.000Z</published>
    <updated>2015-07-06T16:24:27.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>Fastest way to get your dependencies（最快的方式获取依赖）</p>
</blockquote>
<p>作为一个Android 开发者，你可能使用Android Studio Gradle 构建你的项目，对于Android 应用是新的构建系统（虽然有点慢，不过我已经找到解决方案），但是一个很酷的特点是依赖管理可以从远程仓库自动下载，使它们能在你的应用中使用。基本上，你只需在<code>build.gradle</code> 文件中添加一行就可以将类库添加到你的项目中，很容易，对吧？</p>
<hr>
<h2 id="在Android_Studio_来添加依赖类库">在Android Studio 来添加依赖类库</h2><ul>
<li>在Module 点击右键。</li>
<li>选择打开Module 设置（Open Module Settings）。</li>
<li>切换到Dependencies（依赖） 标签。</li>
<li>点击右边的“<code>+</code>” 按钮。</li>
<li>选择Libary Dependencies（类库依赖）。</li>
<li>输入要要搜索的类库。</li>
<li>在搜索结果中，选择要依赖的类库。</li>
</ul>
<p><img src="https://d262ilb51hltx0.cloudfront.net/max/1389/1*S0xNtJxa4cz-2-PpmDfBzA.png" alt="Android Studio module properties"></p>
<p>然后就在Module 文件夹下的<code>build.gradle</code> 文件就有多出一行刚刚添加的依赖库。</p>
<hr>
<h2 id="使用GradlePlease_在线搜索类库">使用GradlePlease 在线搜索类库</h2><ul>
<li><a href="http://gradleplease.appspot.com/" target="_blank" rel="external">http://gradleplease.appspot.com/</a></li>
</ul>
<p>如果你想在网页中体验的话，可以打开上面的网站，输入你要寻找的类库，它仅仅能显示一个结果，但是，你要现实两个，三个呢？</p>
<p><img src="https://d262ilb51hltx0.cloudfront.net/max/1048/1*aBG37_BY975lZIqc9NN8Pw.png" alt="gradleplease"></p>
<hr>
<h2 id="使用ALFI（Android_Library_Finder）">使用ALFI（Android Library Finder）</h2><p>来试试<a href="https://github.com/cesarferreira/alfi" target="_blank" rel="external">ALFI</a>：<br><img src="https://d262ilb51hltx0.cloudfront.net/max/1000/1*F0qdIxZLLVTmG5Zl5Eu3uw.png" alt="[https://github.com/cesarferreira/alfi](https://github.com/cesarferreira/alfi)"></p>
<h3 id="安装">安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem install alfi</span><br></pre></td></tr></table></figure>
<h3 id="搜索：">搜索：</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">alfi</span> picasso</span><br></pre></td></tr></table></figure>
<ul>
<li>打开终端，或者打开Android Studio 的终端（前提是已经配置过）。</li>
<li>输入： <code>alfi 类库名字</code>。</li>
<li>选择合适的依赖库。</li>
<li>粘贴到你的<code>build.gralde</code>。</li>
</ul>
<p>仅仅只需要几个步骤，没有UI，一次就出来了很多结果。</p>
<p><img src="http://ww2.sinaimg.cn/large/68622377gw1etthxcv4t2j20pp0d2dni.jpg" alt="alfi picasso"></p>
<p>又比如我们想知道Android 支持类库都有哪些？<br>我们可以输入<code>alfi com.android.support</code> 来获取。</p>
<hr>
<h2 id="参考">参考</h2><ul>
<li>本文整理来自：<a href="https://medium.com/the-engineering-team/android-library-finder-6c208ba16023" target="_blank" rel="external">Android Library Finder - Fastest way to get your dependencies</a></li>
<li><a href="http://gradleplease.appspot.com/" target="_blank" rel="external">Gradle Please</a></li>
<li><a href="https://github.com/cesarferreira/alfi" target="_blank" rel="external">alfi - Android Library Finder | Github</a></li>
</ul>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://tikitoo.me/2015/07/07/android-development-tools-of-the-alfi-android-libary-finder/">http://tikitoo.me/2015/07/07/android-development-tools-of-the-alfi-android-libary-finder/</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<a href="http://weixin.sogou.com/gzh?openid=oIWsFt0tWyaAMPcOVIEsvZcHnPXA" target="_blank" rel="external">AndroidMate</a><br><img src="http://ww3.sinaimg.cn/mw690/68622377gw1eqmpbo4ugzj209k09kmx3.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>Fastest way to get your dependencies（最快的方式获取依赖）</p>
</blockquote>
<p>作为一个Android 开发者，你可能使用Android Studio Gradle 构建你的项目，对于And]]>
    </summary>
    
      <category term="alfi" scheme="http://tikitoo.me/tags/alfi/"/>
    
      <category term="android" scheme="http://tikitoo.me/tags/android/"/>
    
      <category term="tools" scheme="http://tikitoo.me/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio 入门指南（Slides）]]></title>
    <link href="http://tikitoo.me/2015/07/02/html-embed-slides-com-test/"/>
    <id>http://tikitoo.me/2015/07/02/html-embed-slides-com-test/</id>
    <published>2015-07-02T10:14:58.000Z</published>
    <updated>2015-07-02T10:22:02.000Z</updated>
    <content type="html"><![CDATA[<p>This is Html embed slides.com.</p>
<iframe src="//slides.com/tikitoo/android-sutdio/embed" width="700" height="510" scrolling="no" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen></iframe>
]]></content>
    <summary type="html">
    <![CDATA[<p>This is Html embed slides.com.</p>
<iframe src="//slides.com/tikitoo/android-sutdio/embed" width="700" height="510" scrolling="no" frameb]]>
    </summary>
    
      <category term="html" scheme="http://tikitoo.me/tags/html/"/>
    
      <category term="slides" scheme="http://tikitoo.me/tags/slides/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Github + Hexo 来搭建自己的博客]]></title>
    <link href="http://tikitoo.me/2015/07/01/User-github-hexo-build-blog/"/>
    <id>http://tikitoo.me/2015/07/01/User-github-hexo-build-blog/</id>
    <published>2015-07-01T04:47:18.000Z</published>
    <updated>2015-07-01T13:28:49.000Z</updated>
    <content type="html"><![CDATA[<p>发现Hexo 一个主题不错，就尝试着Hexo 来搭建博客，在搭建的过程中也有不少坑，不过看了很多大牛详细的教程，终于把Hexo 博客搭建好了，所以就来总结总结。</p>
<p>Hexo 是一个基于Node.js 的一个博客框架。它支持Markdown 和大多数Octopress 插件。</p>
<h3 id="安装">安装</h3><p>前提是你要安装npm，然后使用npm 来安装<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-<span class="keyword">cli</span> -<span class="keyword">g</span></span><br></pre></td></tr></table></figure></p>
<h3 id="初始化">初始化</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
<h3 id="创建一个文章">创建一个文章</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"hello world"</span></span><br></pre></td></tr></table></figure>
<h3 id="生成静态博客">生成静态博客</h3><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">ge</span><span class="label">nerate</span></span><br></pre></td></tr></table></figure>
<h3 id="开启服务">开启服务</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></span><br><span class="line">hexo <span class="keyword">server</span></span></span><br></pre></td></tr></table></figure>
<p>然后在浏览器中打开：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>.</p>
<h3 id="部署到远程服务器（Github）">部署到远程服务器（Github）</h3><p>需要在配置文件（_config.yml）中添加一下配置远程仓库信息。<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="keyword">type</span>: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br><span class="line">  <span class="keyword">message</span>: [<span class="keyword">message</span>]</span><br></pre></td></tr></table></figure></p>
<p>然后就可以部署了。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">hexo deploy</span></span><br></pre></td></tr></table></figure></p>
<h3 id="使用自己的域名">使用自己的域名</h3><p>添加CNAME 绑定域名的话，直接将CNAME 文件放在<code>source 文件</code>夹下即可。</p>
<h3 id="添加README_文件">添加README 文件</h3><p>和上面创建CNAME 文件一样，但是有一点要注意的是，README 文件后面不能跟后缀<code>.md</code>，因为跟了后缀<code>.md</code> 会被编译为html 文件，提交Github 就不起作用了。</p>
<h3 id="添加Github_Gist_代码段">添加Github Gist 代码段</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gist gist-<span class="property">id</span>  [<span class="type">file</span>-<span class="property">name</span>] %&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>发现Hexo 一个主题不错，就尝试着Hexo 来搭建博客，在搭建的过程中也有不少坑，不过看了很多大牛详细的教程，终于把Hexo 博客搭建好了，所以就来总结总结。</p>
<p>Hexo 是一个基于Node.js 的一个博客框架。它支持Markdown 和大多数Octopre]]>
    </summary>
    
      <category term="blog" scheme="http://tikitoo.me/tags/blog/"/>
    
      <category term="github" scheme="http://tikitoo.me/tags/github/"/>
    
      <category term="hexo" scheme="http://tikitoo.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[是时候把Android 项目切换到Android Studio]]></title>
    <link href="http://tikitoo.me/2015/06/14/it-is-time-to-switch-to-android-studio-android-project/"/>
    <id>http://tikitoo.me/2015/06/14/it-is-time-to-switch-to-android-studio-android-project/</id>
    <published>2015-06-14T07:44:38.000Z</published>
    <updated>2015-07-01T08:34:12.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://ww4.sinaimg.cn/large/68622377gw1et3o1cgo1pj20qo0bogmb.jpg" alt="Support for C/C++"><br>前几天时间刚结束的Google I/O 大会，是开发者的盛宴，众多新技术让我们目不暇接；当然作为一个Android 开发者，也有很多不可错过的东西，其中Android Studio 发布1.3 版本对于Android 开发者是个福音。</p>
<h2 id="我的经历">我的经历</h2><hr>
<p>当我还是Java 程序员的时候，我就在使用IntelliJ IDEA（没错Android Studio 就是基于它的），我能感受到一个好的工具，能大大提高我们的生产效率。所以当我转做Android 开发的时候，自然而然地使用Android Studio 开发，当然遇到好多问题，不过最终我都克服了，现在使用Android Studio 虽然算不上得心应手，但对于平常的开发还是绰绰有余，也能解决掉平常遇到的小问题。</p>
<h2 id="Android_Studio在国内为什么这么不流行？">Android Studio在国内为什么这么不流行？</h2><hr>
<p>当然我也知道，Android Studio 在国内为什么这么不流行？我总结几点原因，之前在微博上和大牛们有讨论过。</p>
<ul>
<li><p><strong>国内的网络环境。</strong>对于下载，安装，更新都需要科学上网，初学者遇到这些问题基本上都会退缩；就算当初能科学上网，我也是遇到一大堆问题。</p>
</li>
<li><p><strong>学习成本高。</strong>基本上国内的开发者的博客，入门教程大都是基于Eclipse，Android Studio 的教程少之又少，所以资源少，所以让初学者望而却步。</p>
</li>
<li><p><strong>从业者和教育者的固步自封。</strong>基本上，Android 开发的不管大小公司，很少有公司使用Android Studio 来开发，再加上大家已经习惯使用Eclipse 开发，不愿意脱离熟悉的环境。市面上的Android 开发书籍，基本上都是以Eclipse 作为开发环境来讲解样例的，所以综上来说，没有人带头使用，造就了Android Studio 没有流行的原因。也只是稍微有点觉悟的公司都使用Android Studio 开发。</p>
</li>
<li><p><strong>Android Studio 没有稳定的版本，并且不支持C/C++ 开发。</strong>直到2014 年 12 月才终于发布了正式版（1.0）。在这之前，时常会出现一些Bug。不过随着Android Studio 正式版的发布，到Google I/O 2015 的1.3 的发布，支持C/C++ 等众多特性，我们看到Android Studio 变得更加健壮，也让Android 开发者有信心切换到Android Studio。</p>
</li>
</ul>
<p>对于以上的几个问题，我都已经找到了解决办法。</p>
<ul>
<li>作为一个程序员，第一步就要学会科学上网，至于方法，自行搜索，如果找不到，劝你还是不要做程序员了。</li>
<li>至于说Android Studio 的教程，我会在文章结尾推荐大家一些教程，对于入门，熟悉使用也是足够了。</li>
<li>对于从业者和教育者，我建议大家去关注微博上的大牛，关注Github 的Android 开发者，他们都在使用Android Studio，有什么问题，可以向他们请教。我也希望，作为一个Android 开发者，也向周围的人推荐使用Android Studio。</li>
</ul>
<h2 id="Android_Studio_VS_Eclipse">Android Studio VS Eclipse</h2><hr>
<p>至于说Android Studio 和Eclipse 孰优孰劣，网上大牛们已经很多讨论了，更多请看，我就不多谈论了。</p>
<ul>
<li><a href="http://www.infoq.com/cn/news/2013/11/why-drop-eclipse-use-intellij" target="_blank" rel="external">我们为何放弃Eclipse，投奔IntelliJ IDEA</a></li>
<li><a href="http://stormzhang.com/devtools/2014/11/25/android-studio-tutorial1/" target="_blank" rel="external">Android Studio VS Eclipse</a></li>
<li><a href="http://www.zhihu.com/question/21534929" target="_blank" rel="external">Android Studio 比 Eclipse 好用在哪里？</a></li>
</ul>
<p>也有人担心Android Studio 编译速度慢，不过以后就不用担心了，Android Studio 1.3 重写了编译系统，采用和Eclispe 一样的编译原理，所以我们就不用担心Android Studio 的速度了，我也亲自测试了，真的快了好多。</p>
<p>Google 官方也停止了ADT 的更新。那么使用Eclipse 就意味着好多新特性不能使用。而Android Studio 几乎每周都有更新，而且众多服务的集成，让开发者开发更加便捷，专注。</p>
<p>如果你上Github 的话，目前现在流行的开源Android 项目已经没有采用Eclipse，基本上全部采用Android Studio，而且Android Studio 集成Git 插件，从Github Clone 项目特别方便，而且可以直接运行。</p>
<h3 id="介绍Android_Studio_1-3_的新特性">介绍Android Studio 1.3 的新特性</h3><p>如果说Android Studio 1.0 可以勉强够用，那么Android Studio 1.3 相比1.0 就是质的改变，支持C/C++，支持SVG 图片自动生成不同分辨率的图片，增加主题编辑器，以后编辑主题，你也可以实时预览了等等很多。更多请看。</p>
<ul>
<li><a href="http://www.jianshu.com/p/4f7f55471da2" target="_blank" rel="external">Google I/O 2015 为 Android 开发者带来了哪些福利？ - 代码家</a></li>
</ul>
<h2 id="怎么将Eclipse_项目切换到Android_Studio？">怎么将Eclipse 项目切换到Android Studio？</h2><hr>
<p>不用急，Google 官方已经给出了两种解决方式解决方案。</p>
<h3 id="第一种">第一种</h3><p>直接选择目录，next 一直到最后，我们的Eclipse 的项目就到了Android Studio 上了，需要注意的是，这样导入的项目还是会保留Eclipse 的构建方式，比如我们在Eclipse 上使用Ant 构建，迁移后还是会是会用Ant 构建。</p>
<p><img src="http://ww1.sinaimg.cn/large/68622377gw1et3ljatc2vj20m50hq40y.jpg" alt="导入Eclipse ADT"></p>
<h3 id="第二种">第二种</h3><p>首先，我们在Eclipse 将项目导出为Gradle 项目。<br><img src="http://ww1.sinaimg.cn/large/68622377gw1et3lme261sj209q0ajmyw.jpg" alt="选择导出"><br><img src="http://ww4.sinaimg.cn/large/68622377gw1et3lmdqdx5j20el07djs8.jpg" alt="导出Gradle 项目"><br>然后在Android Studio 直接打开build.grade 即可。<br>这样，项目就变成了Gradle 构建了。</p>
<p>当然了，如果项目比较庞大，特别是商业项目，直接切换，难免会有很多问题，不过这是难免的，切换过来，也会一段时间内不太适应，不过当你适应了Android Studio 的便捷的开发，就会对它不离不弃了。</p>
<p>上面的两种方式是官方提供的方式，如果英文过关的话，可以看英文原文。</p>
<ul>
<li><a href="http://tools.android.com/tech-docs/new-build-system/migrating-from-eclipse-projects" target="_blank" rel="external">Migrating From Eclipse Projects（从Eclipse 迁移项目到Android Studio）</a></li>
</ul>
<h2 id="参考以及文章推荐">参考以及文章推荐</h2><hr>
<p>最后，关于Android Studio 我感觉不错的文章，推荐给你。</p>
<ul>
<li><p><a href="http://www.jianshu.com/p/36cfa1614d23" target="_blank" rel="external">Android Studio 入门指南</a><br>这是我写的文章，主要是给初学者搭建Android Studio 开发环境来看的。</p>
</li>
<li><p><a href="http://stormzhang.com/" target="_blank" rel="external">Android Studio系列教程</a><br>这篇是大牛StormZhang 写的系列Android Studio 教程，深入浅出，通俗易懂。</p>
</li>
<li><p><a href="http://tools.android.com/tech-docs/new-build-system/migrating-from-eclipse-projects" target="_blank" rel="external">Migrating From Eclipse Projects（从Eclipse 迁移项目到Android Studio）</a><br>这篇是官方给出的从Eclipse 迁移项目到Android Studio 的两种解决方式。</p>
</li>
</ul>
<ul>
<li><a href="http://robovm.com/google-io-summary-whats-new-in-android-development-tools/" target="_blank" rel="external">Google I/O Summary: What’s new in Android Development Tools</a></li>
<li><a href="http://www.jianshu.com/p/4f7f55471da2" target="_blank" rel="external">Google I/O 2015 为 Android 开发者带来了哪些福利？ - 代码家</a><br>上面两篇，都是对Google IO 2015 的总结，一个中文，一个英文，就看你喜欢看哪个了。中文是大牛代码家总结的。<br><br></li>
<li><a href="http://www.jianshu.com/p/fc03942548cc#" target="_blank" rel="external">Android Studio 的安装和配置篇（Windows篇）</a></li>
<li><a href="http://android-studio.org/index.php/docs/guide" target="_blank" rel="external">Android Studio 使用指南 | Android Studio 中文教程</a></li>
<li><a href="http://www.jianshu.com/p/470730011d85" target="_blank" rel="external">从Eclipse中导入项目到AndroidStudio中</a></li>
</ul>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://www.jianshu.com/p/fe6af27c12ed" target="_blank" rel="external">http://www.jianshu.com/p/fe6af27c12ed</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<a href="http://weixin.sogou.com/gzh?openid=oIWsFt0tWyaAMPcOVIEsvZcHnPXA" target="_blank" rel="external">AndroidMate</a><br><img src="http://ww3.sinaimg.cn/mw690/68622377gw1eqmpbo4ugzj209k09kmx3.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://ww4.sinaimg.cn/large/68622377gw1et3o1cgo1pj20qo0bogmb.jpg" alt="Support for C/C++"><br>前几天时间刚结束的Google I/O 大会，是开发者的盛宴，众多]]>
    </summary>
    
      <category term="Android" scheme="http://tikitoo.me/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://tikitoo.me/tags/Android-Studio/"/>
    
      <category term="Tools" scheme="http://tikitoo.me/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio 入门指南]]></title>
    <link href="http://tikitoo.me/2015/04/20/android-studio-getting-guide/"/>
    <id>http://tikitoo.me/2015/04/20/android-studio-getting-guide/</id>
    <published>2015-04-19T22:23:42.000Z</published>
    <updated>2015-07-01T09:02:50.000Z</updated>
    <content type="html"><![CDATA[<p>作为一个Android 开发者，你应该很了解Android Studio，如果你现在还不了解，没关系，那么从现在开始，我们一起来了解了解Andoid Studio。</p>
<blockquote>
<p>Android Studio 是Google 官方在2013 Google I/O 大会（2013 年5月）上发布的全新Andrid 开发IDE（基于Intellij IDEA），在2014 年12 月发布第一个稳定版（1.0），目前最新版本为1.2 Beta 3；依托与Intellij IDEA，它更智能，提示功能更强，默认使用Gradle 构建，布局文件实时预览等等。</p>
</blockquote>
<p>更多Android Studio 的优点请移步：<a href="http://stormzhang.com/devtools/2014/11/25/android-studio-tutorial1/" target="_blank" rel="external">Android Studio VS Eclipse ADT</a><br><img src="http://blogldc.s3.amazonaws.com/wp-content/uploads/2014/12/studio-hero.jpg" alt="Android Studio（题图来自网络）"></p>
<h2 id="Android_SDK_安装">Android  SDK 安装</h2><hr>
<p>官方下载：<a href="https://developer.android.com/sdk/index.html#Other" target="_blank" rel="external">SDK Tools - Android Developer</a><br>国内镜像：<a href="https://github.com/inferjay/AndroidDevTools#sdk-tools" target="_blank" rel="external">SDK Tools - AndroidDevTools</a><br>有了SDK Tools 就可以配置，就可以安装Andrid SDK 了，打开Android SDK Manager</p>
<p><img src="http://www.android.pk/blog/wp-content/uploads/2011/10/Android-4.0-SDK-Folder.png" alt="Windows SDK Manager（题图来自 [http://www.android.pk](http://www.android.pk/blog/wp-content/uploads/2011/10/Android-4.0-SDK-Folder.png)）"></p>
<p><img src="http://ww2.sinaimg.cn/mw690/68622377gw1erbmsv7jjdj20pr0hfgpr.jpg" alt="Linux SDK Manager"></p>
<p>打开SDK Manager，如果有代理或者VPN 可以直接下载，一般要勾选Tools，Extras；SDK 版本不用全部更新。由于国内连接速度很慢，可以参考这篇文章来使用国内的镜像来下载。</p>
<ul>
<li><a href="http://chenqichao.me/2014/12/22/109-Android-SDK-Download/" target="_blank" rel="external">如何让你的Android SDK下载或者升级快如闪电 | ChenQichao’s Blog</a></li>
</ul>
<p><img src="http://tutorchen.qiniudn.com/sdk-manager.png" alt="SDK Manager"></p>
<h2 id="Android_Studio_下载和安装">Android Studio 下载和安装</h2><hr>
<h3 id="下载">下载</h3><p>下载之前，你要确保已经安装JDK 和Android SDK。<br>由于国内不能直接下载，所以我在这里提供两种下载方式，一种是官网，另一种是国内的镜像网站。</p>
<ul>
<li>官网下载：<a href="http://tools.android.com/download/studio" target="_blank" rel="external">Android Studio Download</a></li>
<li>国内镜像：<a href="https://github.com/inferjay/AndroidDevTools" target="_blank" rel="external">AndroidDevTools - Github</a>。</li>
</ul>
<h3 id="安装">安装</h3><p>下载完之后，如果是安装包，可以直接安装即可；如果是解压包，可以解压后，直接运行。</p>
<ul>
<li>Windows 运行 <code>安装目录/studio.exe</code> 文件。</li>
<li>Mac / Linux 运行 <code>安装目录/bin/studio.sh</code>。</li>
</ul>
<p>打开之后，会进入设置页面，如果没有安装SDK，选择Standard（标准）。如果已经安装过了SDK 就选择Custom（自定义），然后选择SDK 安装目录即可。<br><img src="http://stormzhang.com/image/studio_wizard2.png" alt="选择SDK（[题图来自 StoreZhang 的博客](http://stormzhang.com/)）"><br>然后一直Next 就好了。</p>
<h2 id="Gradle_的安装和配置">Gradle 的安装和配置</h2><hr>
<p>由于Android Studio 默认使用Gradle 构建，而gradle 在国内访问速度离奇的慢，所以我们就自己安装了。</p>
<ul>
<li>官方下载Gradle：<a href="http://gradle.org/downloads" target="_blank" rel="external">Gradle - Download</a></li>
<li>国内下载Gradle： <a href="https://github.com/inferjay/AndroidDevTools#gradle" target="_blank" rel="external">Gradle - AndroidDevTools</a></li>
</ul>
<p>详细安装：<a href="https://github.com/Tikitoo/blog/issues/11" target="_blank" rel="external">Gradle Install Guide（安装指南） · Issue #11 · Tikitoo/blog</a></p>
<h2 id="使用Android_Studio构建第一个Android_程序">使用Android Studio构建第一个Android 程序</h2><hr>
<p><img src="http://stormzhang.com/image/studio_wizard6.png" alt="Android Studio Setup（[题图来自StoreZhang 的博客](http://stormzhang.com/)）"><br>据说第一次创建项目的时候，会卡在那里，有大牛找到的解决办法，就是配置离线Gradle，因为上面我们已经下载过Gradle 了，可以直接拿来用。<br>可以把gradle-2.1-all.zip（不解压）<br>Windows 放在<code>C:\Users\xxx\.gradle\wrapper\dists\......</code> 目录中（如图所示）。<br>Mac/Linux 放在 <code>~/.gradle\wrapper\dists\......</code>。</p>
<p><img src="http://xyzphoto.qiniudn.com/wordpress_13_QQ%E6%88%AA%E5%9B%BE20140918233902.png" alt="Windows Gradle"><br><img src="http://ww4.sinaimg.cn/large/68622377gw1erbmsuj5qhj20pr09utac.jpg" alt="Linux Gradle"></p>
<p>然后再次创建Project 就不会卡了。</p>
<h3 id="一个Android_项目的目录文件的作用">一个Android 项目的目录文件的作用</h3><p><img src="http://ww3.sinaimg.cn/mw690/68622377gw1erbmsu0ddcj21fj0tcqcg.jpg" alt="Android Project Folder"></p>
<p>一个Project 创建后，大概的文件目录就是这样的。<br>因为在Android Studio每个Project，相当于Eclipse 的WorkSpace；每个Module（上图的app 目录）相当于Eclipse 的Project。</p>
<ul>
<li><strong>settings.gradle</strong>： 每个Moudle 要在这里注册</li>
<li><strong>build.gradle</strong>：每个Project 的配置</li>
<li><strong>app</strong>：每个Module</li>
<li><strong>app/build.gradle</strong>：每个Module 配置文件，比如依赖的类库，SDK 版本</li>
<li><strong>app/src/</strong>：源码和资源文件都在这里；我们写的文件都在这里面。</li>
<li><strong>app/libs/</strong>：添加类库。</li>
</ul>
<h2 id="工程和文件结构">工程和文件结构</h2><hr>
<p><img src="https://www.jetbrains.com/img/webhelp/uiEditor.png" alt="题图来自 [Jetbrains 官方文档](https://www.jetbrains.com/img/webhelp/uiEditor.png)"></p>
<ol>
<li>文件编辑区域</li>
<li>编辑区域左边（显示行号的）</li>
<li>输入提示区域</li>
<li>文档切换区域<ul>
<li><code>Alt + Left</code> 或者<code>Alt + Right</code>，不同的Tab 切换</li>
<li><code>Ctrl + Tab</code>：切换不同的区域</li>
</ul>
</li>
<li>其他功能区域</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/mw690/68622377gw1erbugxjgb0j20fs06vgm1.jpg" alt="Android Studio 工具栏设置（题图来自 [大猫知乎的回答](http://www.zhihu.com/question/28110006/answer/39433946)）"></p>
<p><em>新建文件或者插入方法</em><br><code>ALT + INSERT</code>（<code>COMMAND + N</code> Mac）</p>
<ul>
<li>在<code>编辑区</code>域是插入方法（构造方法，Get Set 方法等等）；</li>
<li>在<code>工程结构</code>新建文件</li>
</ul>
<h2 id="罗列一些常用的快捷键">罗列一些常用的快捷键</h2><hr>
<table>
<thead>
<tr>
<th>全局快捷键（比较重要的）</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>ALT + ENTER</td>
<td>工程快速修复</td>
</tr>
<tr>
<td>CTRL + SHIFT + A</td>
<td>快速查找</td>
</tr>
<tr>
<td>CTRL + ALT + L (Win)</td>
<td>格式化代码（我的锁屏的快捷键占了）</td>
</tr>
<tr>
<td>CTRL + Q (Win)</td>
<td>查看文档</td>
</tr>
<tr>
<td>SHIFT + ESC</td>
<td>当切换非编辑区域时，关闭该区域，返回编辑区域</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>编辑区快捷键</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>CTRL + B / F4</td>
<td>查看源码</td>
</tr>
<tr>
<td>CTRL + Q</td>
<td>查看文档</td>
</tr>
<tr>
<td>SHIFT + ESC</td>
<td>当切换非编辑区域时，关闭该区域，返回编辑区域</td>
</tr>
<tr>
<td>ATRL + /</td>
<td>上下文联想</td>
</tr>
<tr>
<td>ALT + LEFT / RIGHT</td>
<td>不同文档左右切换</td>
</tr>
<tr>
<td>ALT + TOP / BOTTOM</td>
<td>跳转到上一个 / 下一方法</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>注释</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>CTRL + /</td>
<td>注视当前行</td>
</tr>
<tr>
<td>CTRL + SHIFT + /</td>
<td>文档注视</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>复制 / 粘贴</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>CTRL + C</td>
<td>复制该行</td>
</tr>
<tr>
<td>CTRL + V</td>
<td>粘贴</td>
</tr>
<tr>
<td>CTRL + X</td>
<td>剪切</td>
</tr>
<tr>
<td>CTRL + Y</td>
<td>删除该行</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:left">查找</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Ctrl+Shift+A</td>
<td>查找所有行为</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + F</td>
<td>查找当前编辑的文档</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + R</td>
<td>查找并替代</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + N</td>
<td>查找类（class）</td>
</tr>
<tr>
<td style="text-align:left">Ctrl + SHIFT + N</td>
<td>查找文件</td>
</tr>
</tbody>
</table>
<h2 id="Git_使用">Git 使用</h2><hr>
<p>由于Android Studio 已经自带了Git 插件，所以我们就不需要去下载了，只需要在本机下载Git 安装即可。<br>然后将可执行文件配置在Android Studio 即可。<br><img src="https://raw.githubusercontent.com/CharonChui/Pictures/master/AndroidStudio_3_7.png" alt="Git（题图来自网络）"></p>
<h2 id="参考">参考</h2><hr>
<ul>
<li><a href="http://stormzhang.com/devtools/2014/11/25/android-studio-tutorial1/" target="_blank" rel="external">Android Studio系列教程——下载与安装</a></li>
<li><a href="http://www.zhihu.com/question/21534929" target="_blank" rel="external">Android Studio 比 Eclipse 好用在哪里？ - 知乎</a></li>
<li><a href="http://www.jianshu.com/p/fc03942548cc#" target="_blank" rel="external">Android Studio 的安装和配置篇（Windows篇） - 简书</a></li>
<li><a href="http://chenqichao.me/2014/12/22/109-Android-SDK-Download/" target="_blank" rel="external">如何让你的Android SDK下载或者升级快如闪电 | ChenQichao’s Blog</a></li>
<li><a href="https://github.com/Tikitoo/blog/issues/11" target="_blank" rel="external">Gradle Install Guide（安装指南） · Issue #11 · Tikitoo/blog</a></li>
<li><a href="https://github.com/inferjay/AndroidDevTools/" target="_blank" rel="external">inferjay/AndroidDevTools</a></li>
</ul>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://www.jianshu.com/p/36cfa1614d23" target="_blank" rel="external">http://www.jianshu.com/p/36cfa1614d23</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<a href="http://weixin.sogou.com/gzh?openid=oIWsFt0tWyaAMPcOVIEsvZcHnPXA" target="_blank" rel="external">AndroidMate</a><br><img src="http://ww3.sinaimg.cn/mw690/68622377gw1eqmpbo4ugzj209k09kmx3.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>作为一个Android 开发者，你应该很了解Android Studio，如果你现在还不了解，没关系，那么从现在开始，我们一起来了解了解Andoid Studio。</p>
<blockquote>
<p>Android Studio 是Google 官方在2013 Goo]]>
    </summary>
    
      <category term="android" scheme="http://tikitoo.me/tags/android/"/>
    
      <category term="guide" scheme="http://tikitoo.me/tags/guide/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 开发必备小知识点]]></title>
    <link href="http://tikitoo.me/2015/04/18/android-the-development-of-essential-little-knowledge/"/>
    <id>http://tikitoo.me/2015/04/18/android-the-development-of-essential-little-knowledge/</id>
    <published>2015-04-18T01:15:05.000Z</published>
    <updated>2015-07-01T09:02:34.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p><a href="http://stackoverflow.com/questions/11285961/how-to-make-a-background-transparent-20-in-android" target="_blank" rel="external">RGB 颜色透明度</a><br>Android 中使用RGB 来表示颜色，如果想要表示透明度，在六位十六进制的前面<code>添加两位十六进制表示透明度</code>。</p>
</li>
<li><p><a href="http://www.materialui.co/colors" target="_blank" rel="external">Material Color</a><br>对开发人员，选择一个颜色真的很不容易，那就让设计师帮你挑选吧。</p>
</li>
<li><p><a href="http://stackoverflow.com/questions/19691530/valid-values-for-androidfontfamily-and-what-they-map-to" target="_blank" rel="external">Android 系统默认字体</a><br>Android 系统默认字体只有很少，从Android 16（Android 4.1）默认提供了一些字体，可以引用。</p>
</li>
</ul>
<ul>
<li><p><a href="http://blog.csdn.net/top_code/article/details/8588703" target="_blank" rel="external">Android px、dp、sp之间相互转换</a><br>在Android 中设置在Java 文件中设置属性，有的方法只提供一种形式的尺寸（比如px），所以这个时候就需要我们去相互转化。</p>
</li>
<li><p><a href="http://androidpixels.net/" target="_blank" rel="external">AndroidPixels</a><br>AndroidPixels 是一个px，sp 相互转化的工具。</p>
</li>
<li><p><a href="http://www.stormzhang.com/android/2015/03/29/android-support-library/" target="_blank" rel="external">Android Support兼容包详解</a><br>Android 中有不同版本的系统，对于老的版本想要支持新的系统的功能，Android 使用Support 包来解决的。</p>
</li>
<li><p><a href="http://www.cnblogs.com/vanezkw/articles/3383744.html" target="_blank" rel="external">Android 多屏适配</a><br>Android 手机，平板有不同的尺寸，不同的尺寸又相差很多，所以要对不同的尺寸的手机进行适配。</p>
</li>
</ul>
<hr>
<p>更多的以后补充。。。。。。</p>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://www.jianshu.com/p/748c10304d08" target="_blank" rel="external">http://www.jianshu.com/p/748c10304d08</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<a href="http://weixin.sogou.com/gzh?openid=oIWsFt0tWyaAMPcOVIEsvZcHnPXA" target="_blank" rel="external">AndroidMate</a><br><img src="http://ww3.sinaimg.cn/mw690/68622377gw1eqmpbo4ugzj209k09kmx3.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p><a href="http://stackoverflow.com/questions/11285961/how-to-make-a-background-transparent-20-in-android" target="_blank" rel="ex]]>
    </summary>
    
      <category term="Tools" scheme="http://tikitoo.me/tags/Tools/"/>
    
      <category term="android" scheme="http://tikitoo.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[作为移动开发者，你应该了解Baas（后端即服务）]]></title>
    <link href="http://tikitoo.me/2015/04/12/as-a-moblile-developer-you-should-know-baas-backend-as-a-service/"/>
    <id>http://tikitoo.me/2015/04/12/as-a-moblile-developer-you-should-know-baas-backend-as-a-service/</id>
    <published>2015-04-12T03:17:00.000Z</published>
    <updated>2015-07-01T09:49:10.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://cdn.pingwest.com/wp-content/uploads/2014/12/BaaS.jpg" alt="Baas（题图来自 [PingWest](http://www.pingwest.com/baas/)）"></p>
<p>作为开发者，了解新技术，新的工具是必不可少的，有时候发现一个好的开发工具，使用起来非常顺手，效率也提高了， 然而如果不了解新的技术，不了解这个行业的发展趋势，那样的后果是不堪回首的，反正，与时俱变是没有错啦，所以今天就来说说每个移动开发者都应该知道的Baas。</p>
<h2 id="那么什么是Baas？">那么什么是Baas？</h2><hr>
<p>前一段时间在知乎上看到AVOSCloud（现在改名叫LeanCloud 了），不知道这是什么东西，偶尔在微博看到有人说在用， 昨天有无意间看到了，就索性把这个弄清楚了，这个东西叫Baas（又称mBaas），全称叫Backend as a Service（后端作为一种服务）， 怎么说呢，为移动应用开发者提供后端服务； 作为一个移动应用开发者（Android &amp; iPhone），除了开发应用程序，还要做后台的服务器端，当然，大多移动应用开发者并非都懂后端开发， 这让一个应用应用开发者开发一款应用不容易，然而有了Baas，开发者就可以不用管后端开发了，Baas 提供商，提供了我们最常用的功能，比如数据存储，应用分析，IM 等功能，让开发者把主要精力放在应用本身，大大提高了效率； 当然也不一定是移动应用开发者，当然也可以Web 开发，当初Baas 主要是为了解决移动应用开发者的后端服务问题，Baas 也提供其他的服务；</p>
<h2 id="那么Baas_都提供哪些服务呢？">那么Baas 都提供哪些服务呢？</h2><hr>
<p>以<a href="https://www.parse.com/" target="_blank" rel="external">Parse</a> 为例，主要有以下功能：</p>
<ul>
<li>消息推送</li>
<li>数据分析</li>
<li>保存数据到云平台</li>
<li>简单的社交服务</li>
<li>本地数据储存</li>
<li>在云服务上运行客户端代码</li>
<li>后台工作</li>
<li>实时查看应用程序的数据，数据推送，日志等</li>
</ul>
<p>其实可以吐槽一下，其实实现的功能比较基础的，一般有后端开发经验的开发者，也不是什么难事，但是自己要搭建服务器，还要一系列的服务要实现， 也是费时费工，有这样的服务，提供的简单的API，使用起来上手非常容易，也提供了一些 Demo，只要自己在服务后台创建应用，申请API_ID，API_KEY就可以使用。</p>
<h2 id="Baas_服务商都有哪些呢？">Baas 服务商都有哪些呢？</h2><hr>
<blockquote>
<p>2013年4月，Facebook收购Parse；2014年6月，苹果在一年一度的WWDC上发布了CloudKit；等到了2014年10月份，Google也出手收购了Firebase。<br>——来自 <a href="http://www.pingwest.com/baas/" target="_blank" rel="external">PingWest</a></p>
</blockquote>
<p>从巨头的态度，就已经看出他们对Baas 的态度，能让移动开发更家简单，才会吸引更多的开发者；当然Baas 的厂商也是层出不穷，而且提供的功能也有各部相同，所以作为一个移动开发者，选择一个适合自己的服务尤为重要，所以接下来就给大家介绍几个知名的Baas 服务，以及他们的提供的功能。</p>
<blockquote>
<h2 id="Appcelerator_Cloud"><a href="http://www.appcelerator.com/cloud/" target="_blank" rel="external">Appcelerator Cloud</a></h2><p>它要依赖Appcelerator Titanium SDK 一起使用，官方宣称目前共有265728526 设备运行着Appcelerator Cloud 服务提供的应用程序，客户不乏有Ebay，vmWare；</p>
<h3 id="Parse"><a href="https://www.parse.com/" target="_blank" rel="external">Parse</a></h3><hr>
<p>也算是特别出名的，刚刚介绍Baas 的时候，就拿它当例子，他的出名更归功于跟了Facebook；</p>
<h3 id="UserGrid"><a href="http://usergrid.incubator.apache.org/" target="_blank" rel="external">UserGrid</a></h3><hr>
<p>Apache 提供了一个Baas 框架，支持多平台，</p>
<h3 id="LeanCloud（AVOSCloud）"><a href="https://leancloud.cn/" target="_blank" rel="external">LeanCloud（AVOSCloud）</a></h3><hr>
<p>LeanCloud 和Facebook Parse 提供的重合度很高</p>
<ul>
<li>社交IM 服务</li>
<li>消息推送服务</li>
<li>数据分析</li>
<li>支持任何类型的结构化 / 半结构化数据，还有地理位置存储</li>
<li>并且提供CDN 存储</li>
<li>云代码</li>
<li>集成GitHub、Bitbucket 或 CSDNCode</li>
<li>对每一个应用，每个月免费提供 500 万次的请求配额</li>
</ul>
</blockquote>
<p>除了上面这些，国外的比如<a href="http://www.kinvey.com/" target="_blank" rel="external">Kinvey</a>，<a href="https://www.stackmob.com/" target="_blank" rel="external">StackMob</a>，<a href="http://www.applicasa.com/" target="_blank" rel="external">Applicasa</a>，名气都是很大，他们提供的功能大都很全，很强大，当然也有提供专有的服务，比如消息推送，IM，分享等等，就不意义介绍了。</p>
<p>下面就说说国内的，国内的Baas 服务随着国内移动开发的的热潮，也如雨后春笋般发展，比如：</p>
<ul>
<li><strong><a href="http://www.umeng.com/" target="_blank" rel="external">友盟</a></strong>，提供了应用分析，消息推送社会化分析，如果你仔细注意，友盟已经被阿里收购，也看出国内的巨头也对Baas 足够的重视；</li>
<li><strong><a href="http://sharesdk.mob.com/" target="_blank" rel="external">Mob - ShareSDK</a></strong>，又比如专门做社会化分享的，几乎集成了国内外的主流社交网站；</li>
<li><strong><a href="https://www.jpush.cn/" target="_blank" rel="external">极光推送</a></strong>，专门做推送服务；</li>
</ul>
<p>除了上面的这些，还有其他的比如应用测试，应用分析等等很多，就不一一列举了。</p>
<p>到了最后，选择一款适合的自己的Baas 服务也是不易的，比如要考虑到以后发展的扩展，各种Baas 的对比，Baas 服务的安全问题等等都是我们该考虑的问题。</p>
<p><br></p>
<h2 id="参考">参考</h2><hr>
<ul>
<li><a href="http://www.pingwest.com/baas/" target="_blank" rel="external">你可能没听说过的BaaS，却是Facebook、苹果和Google同时盯上的领域</a></li>
<li><a href="http://www.infoq.com/cn/articles/the-definition-development-and-future-of-baas-services" target="_blank" rel="external">BaaS服务的定义、发展以及未来</a></li>
<li><a href="http://tikitoo.github.io/blog/cloud%20platform/2014/11/28/baas-detail.html" target="_blank" rel="external">了解Baas（Backend as a Service） - Tikitoo Blog</a></li>
</ul>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://www.jianshu.com/p/48384a8831de" target="_blank" rel="external">http://www.jianshu.com/p/48384a8831de</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<a href="http://weixin.sogou.com/gzh?openid=oIWsFt0tWyaAMPcOVIEsvZcHnPXA" target="_blank" rel="external">AndroidMate</a><br><img src="http://ww3.sinaimg.cn/mw690/68622377gw1eqmpbo4ugzj209k09kmx3.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://cdn.pingwest.com/wp-content/uploads/2014/12/BaaS.jpg" alt="Baas（题图来自 [PingWest](http://www.pingwest.com/baas/)）"></p>
<p]]>
    </summary>
    
      <category term="android" scheme="http://tikitoo.me/tags/android/"/>
    
      <category term="baas" scheme="http://tikitoo.me/tags/baas/"/>
    
      <category term="mobile" scheme="http://tikitoo.me/tags/mobile/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[10个很棒的学习Android 开发的网站]]></title>
    <link href="http://tikitoo.me/2015/02/22/10-great-learning-android-development-of-the-site/"/>
    <id>http://tikitoo.me/2015/02/22/10-great-learning-android-development-of-the-site/</id>
    <published>2015-02-22T05:47:08.000Z</published>
    <updated>2015-07-01T09:03:04.000Z</updated>
    <content type="html"><![CDATA[<p>看到<a href="http://www.jianshu.com/users/eFsf4z/latest_articles" target="_blank" rel="external">江湖旅人</a> 写的《<a href="http://www.jianshu.com/p/ff96a8e5abdb" target="_blank" rel="external">10个很棒的学习iOS开发的网站 - 简书</a>》，所以就忍不住写Android 啦，也希望对大家有帮助。<br>我推荐的网站，都是我在学习Android 开发过程中发现的好网站，给初学者一些建议，少走一些弯路。</p>
<h2 id="Android_Developers"><a href="https://developer.android.com/index.html" target="_blank" rel="external">Android Developers</a></h2><hr>
<p>作为一个Android 开发者，官网的资料当然不可错过，从设计，培训，指南，文档，都不应该错过，在以后的学习过程中慢慢理解体会。<br><img src="http://ww4.sinaimg.cn/large/68622377jw1epljqud94bj21fj0tcaiz.jpg" alt="Android Developer"></p>
<h2 id="Android_Guides_-_CodePath"><a href="http://guides.codepath.com/android" target="_blank" rel="external">Android Guides  - CodePath</a></h2><hr>
<p>CodePath 是国外一个技术培训机构，主要培训iOS 和Android 开发，而CodePath 将Android Guides 放在Github，已经获得了4000+ 个赞，对于Android 初学这特别适合，而且浅显易懂。<br><img src="http://ww1.sinaimg.cn/large/68622377jw1epljqvisahj21fj0tck65.jpg" alt="CodePath"></p>
<h2 id="Android_tutorial_-_TutorialSpoint"><a href="http://www.tutorialspoint.com/android/" target="_blank" rel="external">Android tutorial - TutorialSpoint</a></h2><hr>
<p>TutorialSpoint 是一个专业的技术教程网站，基本上我们所熟知的热门技术，都能在这里找到教程，知识点覆盖的特别全，而且代码风格也很不错，同时也适合初学着；更人性化的是，所有教程提供离线PDF 下载。<br><img src="http://ww3.sinaimg.cn/large/68622377jw1epljqwixt2j21fj0tc17a.jpg" alt="Tutorial Spoint"></p>
<h2 id="Android_Development_-_Vogella"><a href="http://www.vogella.com/tutorials/android.html" target="_blank" rel="external">Android Development - Vogella</a></h2><hr>
<p>Vogella 提供的Android 开发教程也是可圈可点的，可能知识点覆盖不是特别全，但是单个知识点，Vogella 讲解的还是很详细的。</p>
<p><img src="http://ww3.sinaimg.cn/large/68622377jw1epljqwiqdej21fj0tck8z.jpg" alt="Vogella"></p>
<h2 id="AndroidHive"><a href="http://www.androidhive.info/" target="_blank" rel="external">AndroidHive</a></h2><hr>
<p>AndroidHive 是一个个人博客，主要写Android 开发的教程，虽然只是一个人，但却提供了绘图，到写教程，功能视频演示，也表现出了博主的专业与敬业，博主写的东西也是跟随新技术，可实用性特别强。<br><img src="http://ww2.sinaimg.cn/large/68622377jw1epljqxvulzj21fj0tcwot.jpg" alt="Android Hive"></p>
<h2 id="Android_SDK_-_Tuts+_Code"><a href="http://code.tutsplus.com/categories/android-sdk" target="_blank" rel="external">Android SDK - Tuts+ Code</a></h2><hr>
<p>Tuts+ 是一个技术教程，课程和电子书的网站，基本上热门的技术都提供了，他的教程主要是免费的，而课程，电子书是有偿的，由于其专业性，大多教程都是高精华的。<br><img src="http://ww1.sinaimg.cn/large/68622377jw1epljqyixf0j21fj0tcdq4.jpg" alt="Tuts Plus"></p>
<h2 id="Lynda"><a href="http://www.lynda.com/" target="_blank" rel="external">Lynda</a></h2><hr>
<p>Lynda 是一个在线学习网站，该网站提供技术，设计等很多的课程。</p>
<p><img src="http://ww1.sinaimg.cn/large/68622377jw1epljqzu0n2j21fj0tctn7.jpg" alt="Lynda"></p>
<h2 id="Android_Questions_-_Stack_Overflow"><a href="http://stackoverflow.com/questions/tagged/android" target="_blank" rel="external">Android Questions - Stack Overflow</a></h2><hr>
<p>Stackoverflow 是一个技术在线问答网站，几乎平常遇到的所有技术网站，在这里都能找到答案，而且你提问的问题，上面有很多大牛会很热心回答。</p>
<p><img src="http://ww4.sinaimg.cn/large/68622377jw1epljr0g5zjj21fj0tck6a.jpg" alt="Stackoverflow"></p>
<h2 id="Search_·_android_-_Github"><a href="https://github.com/search?utf8=%E2%9C%93&amp;q=android" target="_blank" rel="external">Search · android - Github</a></h2><hr>
<p>Github 是一个基于Git 的代码托管工具，几乎所有知名的开源软件都选择Github 来托管，而很多Android 开发者也都选择Github，几乎常见的Demo 在Github 都能找到类似的。<br><img src="http://ww1.sinaimg.cn/large/68622377jw1epljr0ys5xj21fj0tc44x.jpg" alt="Github"></p>
<h2 id="Android_Archives_|_Java_Code_Geeks"><a href="http://www.javacodegeeks.com/tutorials/android-tutorials/android-core-tutorials/" target="_blank" rel="external">Android Archives | Java Code Geeks</a></h2><hr>
<p>Java Code Geeks 主要是一个Java 教程的网站，而他提供的Android 教程，一步一步，还有配图，使初学者没有太大压力。<br><img src="http://ww3.sinaimg.cn/large/68622377jw1epljr1kqqoj21fj0tcakk.jpg" alt="Java Code Geeks"></p>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://www.jianshu.com/p/85cb02292acc" target="_blank" rel="external">http://www.jianshu.com/p/85cb02292acc</a><br>非商业转载请在「<code>开头</code>」注明作者「<code>详细信息</code>」和「<code>本文出处</code>」。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>看到<a href="http://www.jianshu.com/users/eFsf4z/latest_articles" target="_blank" rel="external">江湖旅人</a> 写的《<a href="http://www.jianshu.co]]>
    </summary>
    
      <category term="android" scheme="http://tikitoo.me/tags/android/"/>
    
      <category term="website" scheme="http://tikitoo.me/tags/website/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我是如何自学Android，资料分享（2015）]]></title>
    <link href="http://tikitoo.me/2015/02/11/how-do-i-self-study-android-2015/"/>
    <id>http://tikitoo.me/2015/02/11/how-do-i-self-study-android-2015/</id>
    <published>2015-02-11T01:37:16.000Z</published>
    <updated>2015-07-01T09:00:58.000Z</updated>
    <content type="html"><![CDATA[<p>自己学了两三个月的Android，最近花了一周左右的时间写了个App——<a href="https://github.com/Tikitoo/Diigoer" target="_blank" rel="external">Diigoer（已开源）</a>，又花了一两周时间找工作，收到了两个Offer，也算是对自己学习的一种认可吧；我刚开始学习总结的——《<a href="http://www.jianshu.com/p/2ee0e74abbdf" target="_blank" rel="external">我是如何自学Android，资料分享</a>》，如果是初学Android 的话，不应该错过的，而今天这篇分享好这篇文章，相对于第一次写的会有所提升，所以建议先把上一篇看了，再来看这一篇；<br>那下面就切入正题吧，之前重复的就不再介绍了，相对于第一季，自己对Android 的认识更加深了（算是入门了吧），干货更多了，更加通俗易懂了，英文资料会多一点；而自己学习过程中发现的一些好资源，分享给你们，希望对你们的有一些帮助；</p>
<h2 id="Java_学习">Java 学习</h2><hr>
<p>我要再次强调，一定要有Java 基础（虽然现在使用其他语言也可以开发Android，但毕竟是很小众），也不要认为学习Java 两三周就可以不用管了，这会在以后的深入学习中暴露出问题，所以Java 基础一定要牢固，当然我也不是说，Java 学的特别好，才能去学习Android，毕竟学习是循序渐进的，所以在以后的学习中要注意，对于Java 系统的学习，我有一下几个推荐；</p>
<blockquote>
<ul>
<li><a href="http://introcs.cs.princeton.edu/java/home/" target="_blank" rel="external">Introduction to Programming in Java: An Interdisciplinary Approach</a><br>普林斯顿的公开课，也有书籍，我觉得可以直接跟着公开课学习就OK 啦；</li>
<li><a href="http://www.tutorialspoint.com/java/" target="_blank" rel="external">Java Tutorial - TutorialSpoint</a><br>TutorialSpoint 是一个专门技术教程网站，其他教程也可以去看学习；当然你想离线观看，网站还提供了PDF 版<ul>
<li><a href="http://www.tutorialspoint.com/java/java_tutorial.pdf" target="_blank" rel="external">Java Tutorial PDF</a></li>
</ul>
</li>
<li><a href="http://math.hws.edu/eck/cs124/downloads/javanotes7.pdf" target="_blank" rel="external">Javanotes 7.0 — Title Page</a><br>这个是霍巴特威廉史密斯学院的一本书，跟着JDK 版本，已经发行了好多版本；</li>
</ul>
</blockquote>
<p>由于篇幅有限，所以在这里就不累赘了，以后会专门写一篇文章来说Java；</p>
<h2 id="Android_系列教程">Android 系列教程</h2><hr>
<p>这一段时间，发现了好多学习资源，自己收藏了，不敢独享，所以拿出来和大家分享，如果您发现不错的学习资源，欢迎留言；<br>而学习的过程中，也忽略了一些问题，比如自己学习的不系统，如果您也是自学的话，一定要注意这个问题，我觉得，除了看官方文档和大牛的博客之外，最重要就找一本好书，把自己的知识系统化；</p>
<h3 id="入门指南">入门指南</h3><hr>
<ul>
<li><a href="developer.android.com/docs/training/index.html">Getting Started | Android Developers</a></li>
<li><a href="http://halfapp.com/blog/get-started-programming-android-apps/" target="_blank" rel="external">How to get started programming Android apps | HalfApp</a></li>
<li><a href="http://www.reddit.com/r/Android/comments/1w3woc/a_step_by_step_guide_about_how_to_get_started_and/" target="_blank" rel="external">A step by step guide about how to get started and involved in Android Development - Reddit</a></li>
<li><a href="https://github.com/codepath/android_guides/wiki/Beginning-Android-Resources" target="_blank" rel="external">Beginning Android Resources · codepath/android_guides Wiki</a></li>
<li><a href="http://www.jianshu.com/p/2ee0e74abbdf" target="_blank" rel="external">我是如何自学Android，资料分享</a></li>
<li><a href="http://drakeet.me/android_base_road" target="_blank" rel="external">我推荐的 Android 基础学习路线</a></li>
<li><a href="http://mmclub.github.io/blog/2014/04/03/start-learning-android/" target="_blank" rel="external">Android入门杂谈</a></li>
</ul>
<h3 id="书籍推荐">书籍推荐</h3><hr>
<p>首先自己没有很系统地去看一本书，所以我也是搜索，或者实在知乎上别人推荐的，所以，要根据自己的情况，适合自己的书来看；</p>
<ul>
<li><a href="http://commonsware.com/Android/" target="_blank" rel="external"> The Busy Coder’s Guide to Android Development</a><br>这是大牛CommonsGuy 开源的一本书，它的更新非常及时，基本上就是跟着SDK 更新的，下载PDF 可以在这里（<a href="http://commonsware.com/Android/4-2-free" target="_blank" rel="external">Four-to-Free Guarantee</a>）下载，书籍中源码可以在Github（<a href="https://github.com/commonsguy/cw-omnibus" target="_blank" rel="external">commonsguy/cw-omnibus</a>） 中查看；</li>
<li><a href="http://nimooli.com/blog/best-android-books-2014/" target="_blank" rel="external">Best Android Books and Resources 2014</a><br>这篇文章主要介绍了Android 书籍和开发资源；</li>
</ul>
<h3 id="公开课">公开课</h3><hr>
<ul>
<li><a href="https://www.udacity.com/course/ud853" target="_blank" rel="external">How to Develop Android Apps Online Course - Udacity</a></li>
<li><a href="https://class.coursera.org/android-001/lecture" target="_blank" rel="external">Programming Mobile Applications for Android (Coursera)</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLB03EA9545DD188C3" target="_blank" rel="external">Android Development For Absolute Beginners - YouTube</a></li>
</ul>
<h3 id="系列教程">系列教程</h3><hr>
<ul>
<li><a href="https://github.com/thecodepath/android_guides/wiki" target="_blank" rel="external">Home · codepath/android_guides Wiki - codepath</a><br>Android 指南，它不仅介绍怎么创建一个最简单的App Demo，循序渐进教你使用各种流行的框架，对于即将工作的同学来说是很用用的；Demo 很有实战意义；</li>
<li><a href="http://www.tutorialspoint.com/android/index.htm" target="_blank" rel="external">Android tutorial - TutorialSpoint</a><br>是不是特别熟悉呀，对上面提到过，教程特别通俗易懂，代码实例也不错；</li>
<li><a href="http://www.vogella.com/tutorials/android.html" target="_blank" rel="external">Android Development - Vogella</a><br>教程挺通俗易懂</li>
<li><a href="http://androidhive.info/" target="_blank" rel="external">AndroidHive | Tutorials, Games, Apps, Tips |</a><br>博主是印度人，博客主要是以教程为主，质量较高，而且会分享比较新的东西；</li>
<li><a href="http://www.codelearn.org/android-tutorial/" target="_blank" rel="external">Android Tutorial | Interactive and Step by step tutorial to learn Android</a></li>
<li><a href="https://code.tutsplus.com/categories/android-sdk" target="_blank" rel="external">Android SDK - Tuts+ Code Category</a></li>
<li><a href="http://www.learn2crack.com/category/androidprogramming" target="_blank" rel="external">Android Programming Archives - Learn2Crack</a></li>
<li><a href="https://www.mysliderule.com/learning-paths/android/learn/" target="_blank" rel="external">Android Learning Path | SlideRule</a></li>
</ul>
<h3 id="大牛博客推荐">大牛博客推荐</h3><hr>
<ul>
<li><a href="https://github.com/android-cn/android-dev-cn" target="_blank" rel="external">android-cn/android-dev-cn</a><br>主要介绍国内Android 开发大牛；</li>
<li><a href="https://github.com/android-cn/android-dev-com" target="_blank" rel="external">android-cn/android-dev-com</a><br>主要介绍国外Android 开发大牛；</li>
<li><a href="http://www.quora.com/What-are-must-read-Android-developer-blogs" target="_blank" rel="external">What are must-read Android developer blogs? - Quora</a><br>Quora 上的回答</li>
<li><a href="http://www.zhihu.com/question/19775981" target="_blank" rel="external">有哪些 Android 大牛的 blog 值得推荐？ - 知乎</a><br>知乎上的回答</li>
</ul>
<h3 id="开源App">开源App</h3><hr>
<ul>
<li><a href="https://f-droid.org/" target="_blank" rel="external">F-Droid | Free and Open Source Android App Repository</a><br>F-Droid 是一个Android 开源App 仓库</li>
<li><a href="http://blog.tisa7.com/android_open_source_projects" target="_blank" rel="external">Android优秀开源项目 - 小猪爬爬</a></li>
<li><a href="https://android-arsenal.com/" target="_blank" rel="external">The Android Arsenal - A categorized directory of free libraries and tools for Android</a><br>在这里，找到最新最流行的Android 开源类库</li>
<li><a href="https://github.com/Trinea/android-open-project" target="_blank" rel="external">Trinea/android-open-project - Trinea</a><br>大牛Trinea 写的Android 开源项目汇总</li>
</ul>
<h3 id="开发工具">开发工具</h3><hr>
<ul>
<li><a href="http://www.codota.com/" target="_blank" rel="external">Great Code Examples &amp; Snippets | Codota</a><br>一个Android 代码搜索引擎；前两天发现了这个工具就爱不释手，写了篇文章——《<a href="http://www.jianshu.com/p/59b89c26f9e0" target="_blank" rel="external">Android 开发工具之Codota——搜索最好的Android 代码 - 简书</a>》，让你参考入门。</li>
<li><a href="http://www.gradleware.com/" target="_blank" rel="external">Gradle</a><br>知乎上我回答的《<a href="http://www.zhihu.com/question/27866554/answer/38427122" target="_blank" rel="external">如何从eclipse转入android studio,感觉Gradle什么的很难理解的。有什么教程吗? - Tikitoo 的回答 - 知乎</a>》，可以参考。</li>
<li><a href="">Android Studio</a><br>从Google 的态度就可以看出，Android Studio 就是未来，而且在最近发布了正式版，教程在网上也不少。</li>
<li><a href="http://androiduiux.com" target="_blank" rel="external">Android User Interface | User Experience | Inspiration source for Android Designers and Developers</a></li>
<li><a href="http://www.android-app-patterns.com/" target="_blank" rel="external">Android App Patterns</a></li>
<li><a href="https://www.iconfinder.com/" target="_blank" rel="external">Iconfinder - 400,000+ free and premium icons</a><br>一个Icon 搜索引擎</li>
<li><a href="https://github.com/google/material-design-icons" target="_blank" rel="external">google/material-design-icons - github</a><br>Google 把官方的Material Design 1000+ 的Icon 开源了，不仅仅只有Android 版，而且还有Web 和iOS，真是业界良心呀。</li>
<li><a href="https://github.com/inferjay/AndroidDevTools" target="_blank" rel="external">inferjay/AndroidDevTools</a><br>inferjay 总结的开发工具，并且提供了国内的镜像。</li>
<li><a href="https://www.genymotion.com/" target="_blank" rel="external">Genymotion - A faster Android emulator</a><br>Genymotion 是Android 的虚拟机，比官方的快了不知多少啊，它是基于Virtual Box，并且提供了插件。</li>
</ul>
<h3 id="订阅">订阅</h3><hr>
<ul>
<li><a href="http://androidweekly.net/" target="_blank" rel="external">Android 周刊</a></li>
<li><a href="http://www.androidweekly.cn/" target="_blank" rel="external">Android开发技术周报</a></li>
<li><a href="https://github.com/nemoTyrant/manong#ANDROID" target="_blank" rel="external">码农周刊 - Android</a></li>
</ul>
<h3 id="资源">资源</h3><hr>
<ul>
<li><a href="http://www.androidauthority.com/best-resources-android-development-372414/" target="_blank" rel="external">Best resources for Android development</a></li>
<li><a href="http://www.bongizmo.com/blog/android-resources-each-developer-should-know/" target="_blank" rel="external">Resources every Android developer must know</a><br>中文版——《<a href="http://www.importnew.com/3988.html" target="_blank" rel="external">Android开发者必知的开发资源 - ImportNew</a><br>》，译者是ImportNew - 黄小非</li>
<li><a href="http://yeungeek.com/awesome-resources/" target="_blank" rel="external">开发资源 | Android 沉思录</a></li>
<li><a href="http://www.apptentive.com/blog/programming-resources-for-android-developers/" target="_blank" rel="external">Android Developer Resources, Tutorials, and References — Being Apptentive</a></li>
<li><a href="https://github.com/codepath/android_guides/wiki/Beginning-Android-Resources" target="_blank" rel="external">Beginning Android Resources · codepath/android_guides Wiki</a></li>
<li><a href="http://www.cnblogs.com/mainroadlee/p/android_resources_list.html" target="_blank" rel="external">Android开发者资源大汇总 - Android开发周刊 - 博客园</a></li>
<li><a href="https://github.com/snowdream/awesome-android" target="_blank" rel="external">awesome-android - github</a></li>
<li><a href="https://plus.google.com/+KevinDarty/posts/Qex6Ae6zhZW" target="_blank" rel="external">Where To Start - Learning Android Development the Right Way - Kevin Darty - Google+</a></li>
<li><a href="http://www.reddit.com/r/androiddev/wiki/resources" target="_blank" rel="external">resources - androiddev reddit</a></li>
<li><a href="http://zhuanlan.zhihu.com/anzhuo/19657543" target="_blank" rel="external">Android自学资料汇总</a></li>
<li><a href="http://stormzhang.github.io/android/2014/07/07/learn-android-from-rookie/" target="_blank" rel="external">Android 学习之路</a></li>
</ul>
<h2 id="参考">参考</h2><hr>
<ul>
<li><a href="http://www.quora.com/What-are-the-best-resources-to-learn-Android-development" target="_blank" rel="external">http://www.quora.com/What-are-the-best-resources-to-learn-Android-development</a></li>
<li><a href="http://www.quora.com/What-are-the-best-websites-to-learn-Android-development-tools#" target="_blank" rel="external">http://www.quora.com/What-are-the-best-websites-to-learn-Android-development-tools#</a></li>
<li><a href="http://www.sitepoint.com/12-android-tutorials-beginners/" target="_blank" rel="external">http://www.sitepoint.com/12-android-tutorials-beginners/</a></li>
<li><a href="http://nimooli.com/blog/best-android-books-2014/" target="_blank" rel="external">http://nimooli.com/blog/best-android-books-2014/</a></li>
</ul>
<hr>
<blockquote>
<p>本文作者：<a href="http://weibo.com/lyf0306" target="_blank" rel="external">Tikitoo</a><br>本文出处：<a href="http://www.jianshu.com/p/874ff12a4c01" target="_blank" rel="external">http://www.jianshu.com/p/874ff12a4c01</a><br>转载请在开头注明<code>作者详细信息</code>和<code>本文出处</code>。</p>
<p>欢迎关注我的微信公众号，分享<code>Android 开发</code>和<code>互联网内容</code>。<br>微信号：<code>AndroidMate</code><br>公众号：<code>安卓同学</code><br><img src="http://ww3.sinaimg.cn/mw690/68622377gw1eqmpbo4ugzj209k09kmx3.jpg" alt="安卓同学"></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>自己学了两三个月的Android，最近花了一周左右的时间写了个App——<a href="https://github.com/Tikitoo/Diigoer" target="_blank" rel="external">Diigoer（已开源）</a>，又花了一两周时间]]>
    </summary>
    
      <category term="android" scheme="http://tikitoo.me/tags/android/"/>
    
      <category term="tutorial" scheme="http://tikitoo.me/tags/tutorial/"/>
    
  </entry>
  
</feed>